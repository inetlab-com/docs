### YamlMime:ManagedReference
items:
- uid: Inetlab.MMS.MM7.AddressCollection
  commentId: T:Inetlab.MMS.MM7.AddressCollection
  id: AddressCollection
  parent: Inetlab.MMS.MM7
  children:
  - Inetlab.MMS.MM7.AddressCollection.#ctor
  - Inetlab.MMS.MM7.AddressCollection.Add
  - Inetlab.MMS.MM7.AddressCollection.Add(Inetlab.MMS.MM7.Address)
  - Inetlab.MMS.MM7.AddressCollection.Add(Inetlab.MMS.MM7.AddressTypes,System.String)
  - Inetlab.MMS.MM7.AddressCollection.Add(System.String)
  - Inetlab.MMS.MM7.AddressCollection.Contains(Inetlab.MMS.MM7.Address)
  - Inetlab.MMS.MM7.AddressCollection.Item(System.Int32)
  - Inetlab.MMS.MM7.AddressCollection.Remove(Inetlab.MMS.MM7.Address)
  langs:
  - csharp
  - vb
  name: AddressCollection
  nameWithType: AddressCollection
  fullName: Inetlab.MMS.MM7.AddressCollection
  type: Class
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: AddressCollection
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 9
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  summary: "\nContains collection of Address classes.\n"
  example: []
  syntax:
    content: >-
      [Obfuscation(Exclude = true, ApplyToMembers = false, StripAfterObfuscation = true)]

      public class AddressCollection : CollectionBase, IList, ICollection, IEnumerable
    content.vb: >-
      <Obfuscation(Exclude:=True, ApplyToMembers:=False, StripAfterObfuscation:=True)>

      Public Class AddressCollection
          Inherits CollectionBase
          Implements IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements:
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: true
    - name: ApplyToMembers
      type: System.Boolean
      value: false
    - name: StripAfterObfuscation
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Inetlab.MMS.MM7.AddressCollection.#ctor
  commentId: M:Inetlab.MMS.MM7.AddressCollection.#ctor
  id: '#ctor'
  parent: Inetlab.MMS.MM7.AddressCollection
  langs:
  - csharp
  - vb
  name: AddressCollection()
  nameWithType: AddressCollection.AddressCollection()
  fullName: Inetlab.MMS.MM7.AddressCollection.AddressCollection()
  type: Constructor
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: .ctor
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 12
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  syntax:
    content: public AddressCollection()
    content.vb: Public Sub New
  overload: Inetlab.MMS.MM7.AddressCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.MMS.MM7.AddressCollection.Add
  commentId: M:Inetlab.MMS.MM7.AddressCollection.Add
  id: Add
  parent: Inetlab.MMS.MM7.AddressCollection
  langs:
  - csharp
  - vb
  name: Add()
  nameWithType: AddressCollection.Add()
  fullName: Inetlab.MMS.MM7.AddressCollection.Add()
  type: Method
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: Add
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 22
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  summary: "\nAdd a new <xref href=\"Inetlab.MMS.MM7.Address\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: >-
      [Obfuscation(Exclude = true, ApplyToMembers = false, StripAfterObfuscation = true)]

      public Address Add()
    return:
      type: Inetlab.MMS.MM7.Address
      description: A <xref href="Inetlab.MMS.MM7.Address" data-throw-if-not-resolved="false"></xref> object
    content.vb: >-
      <Obfuscation(Exclude:=True, ApplyToMembers:=False, StripAfterObfuscation:=True)>

      Public Function Add As Address
  overload: Inetlab.MMS.MM7.AddressCollection.Add*
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: true
    - name: ApplyToMembers
      type: System.Boolean
      value: false
    - name: StripAfterObfuscation
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.MMS.MM7.AddressCollection.Add(Inetlab.MMS.MM7.AddressTypes,System.String)
  commentId: M:Inetlab.MMS.MM7.AddressCollection.Add(Inetlab.MMS.MM7.AddressTypes,System.String)
  id: Add(Inetlab.MMS.MM7.AddressTypes,System.String)
  parent: Inetlab.MMS.MM7.AddressCollection
  langs:
  - csharp
  - vb
  name: Add(AddressTypes, String)
  nameWithType: AddressCollection.Add(AddressTypes, String)
  fullName: Inetlab.MMS.MM7.AddressCollection.Add(Inetlab.MMS.MM7.AddressTypes, System.String)
  type: Method
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: Add
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 37
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  summary: "\nAdd a new <xref href=\"Inetlab.MMS.MM7.Address\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: >-
      [Obfuscation(Exclude = true, ApplyToMembers = false, StripAfterObfuscation = true)]

      public Address Add(AddressTypes addrtype, string number)
    parameters:
    - id: addrtype
      type: Inetlab.MMS.MM7.AddressTypes
      description: type of address
    - id: number
      type: System.String
      description: address number
    return:
      type: Inetlab.MMS.MM7.Address
      description: A <xref href="Inetlab.MMS.MM7.Address" data-throw-if-not-resolved="false"></xref> object
    content.vb: >-
      <Obfuscation(Exclude:=True, ApplyToMembers:=False, StripAfterObfuscation:=True)>

      Public Function Add(addrtype As AddressTypes, number As String) As Address
  overload: Inetlab.MMS.MM7.AddressCollection.Add*
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: true
    - name: ApplyToMembers
      type: System.Boolean
      value: false
    - name: StripAfterObfuscation
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.MMS.MM7.AddressCollection.Add(System.String)
  commentId: M:Inetlab.MMS.MM7.AddressCollection.Add(System.String)
  id: Add(System.String)
  parent: Inetlab.MMS.MM7.AddressCollection
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: AddressCollection.Add(String)
  fullName: Inetlab.MMS.MM7.AddressCollection.Add(System.String)
  type: Method
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: Add
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 44
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  syntax:
    content: >-
      [Obfuscation(Exclude = true, ApplyToMembers = false, StripAfterObfuscation = true)]

      public Address Add(string number)
    parameters:
    - id: number
      type: System.String
    return:
      type: Inetlab.MMS.MM7.Address
    content.vb: >-
      <Obfuscation(Exclude:=True, ApplyToMembers:=False, StripAfterObfuscation:=True)>

      Public Function Add(number As String) As Address
  overload: Inetlab.MMS.MM7.AddressCollection.Add*
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: true
    - name: ApplyToMembers
      type: System.Boolean
      value: false
    - name: StripAfterObfuscation
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.MMS.MM7.AddressCollection.Add(Inetlab.MMS.MM7.Address)
  commentId: M:Inetlab.MMS.MM7.AddressCollection.Add(Inetlab.MMS.MM7.Address)
  id: Add(Inetlab.MMS.MM7.Address)
  parent: Inetlab.MMS.MM7.AddressCollection
  langs:
  - csharp
  - vb
  name: Add(Address)
  nameWithType: AddressCollection.Add(Address)
  fullName: Inetlab.MMS.MM7.AddressCollection.Add(Inetlab.MMS.MM7.Address)
  type: Method
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: Add
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 55
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  summary: "\nAdd a new <xref href=\"Inetlab.MMS.MM7.Address\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: >-
      [Obfuscation(Exclude = true, ApplyToMembers = false, StripAfterObfuscation = true)]

      public void Add(Address address)
    parameters:
    - id: address
      type: Inetlab.MMS.MM7.Address
    content.vb: >-
      <Obfuscation(Exclude:=True, ApplyToMembers:=False, StripAfterObfuscation:=True)>

      Public Sub Add(address As Address)
  overload: Inetlab.MMS.MM7.AddressCollection.Add*
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: true
    - name: ApplyToMembers
      type: System.Boolean
      value: false
    - name: StripAfterObfuscation
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.MMS.MM7.AddressCollection.Remove(Inetlab.MMS.MM7.Address)
  commentId: M:Inetlab.MMS.MM7.AddressCollection.Remove(Inetlab.MMS.MM7.Address)
  id: Remove(Inetlab.MMS.MM7.Address)
  parent: Inetlab.MMS.MM7.AddressCollection
  langs:
  - csharp
  - vb
  name: Remove(Address)
  nameWithType: AddressCollection.Remove(Address)
  fullName: Inetlab.MMS.MM7.AddressCollection.Remove(Inetlab.MMS.MM7.Address)
  type: Method
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: Remove
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 63
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  syntax:
    content: >-
      [Obfuscation(Exclude = true, ApplyToMembers = false, StripAfterObfuscation = true)]

      public void Remove(Address address)
    parameters:
    - id: address
      type: Inetlab.MMS.MM7.Address
    content.vb: >-
      <Obfuscation(Exclude:=True, ApplyToMembers:=False, StripAfterObfuscation:=True)>

      Public Sub Remove(address As Address)
  overload: Inetlab.MMS.MM7.AddressCollection.Remove*
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: true
    - name: ApplyToMembers
      type: System.Boolean
      value: false
    - name: StripAfterObfuscation
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.MMS.MM7.AddressCollection.Item(System.Int32)
  commentId: P:Inetlab.MMS.MM7.AddressCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Inetlab.MMS.MM7.AddressCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: AddressCollection.Item[Int32]
  fullName: Inetlab.MMS.MM7.AddressCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: this[]
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 75
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  syntax:
    content: >-
      [Obfuscation(Exclude = true, StripAfterObfuscation = true)]

      public Address this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Inetlab.MMS.MM7.Address
    content.vb: >-
      <Obfuscation(Exclude:=True, StripAfterObfuscation:=True)>

      Public Property Item(index As Integer) As Address
  overload: Inetlab.MMS.MM7.AddressCollection.Item*
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: true
    - name: StripAfterObfuscation
      type: System.Boolean
      value: true
  nameWithType.vb: AddressCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.MMS.MM7.AddressCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Inetlab.MMS.MM7.AddressCollection.Contains(Inetlab.MMS.MM7.Address)
  commentId: M:Inetlab.MMS.MM7.AddressCollection.Contains(Inetlab.MMS.MM7.Address)
  id: Contains(Inetlab.MMS.MM7.Address)
  parent: Inetlab.MMS.MM7.AddressCollection
  langs:
  - csharp
  - vb
  name: Contains(Address)
  nameWithType: AddressCollection.Contains(Address)
  fullName: Inetlab.MMS.MM7.AddressCollection.Contains(Inetlab.MMS.MM7.Address)
  type: Method
  source:
    remote:
      path: Source/CS/MM7/AddressCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: Contains
    path: ../Source/CS/MM7/AddressCollection.cs
    startLine: 89
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.MM7
  syntax:
    content: >-
      [Obfuscation(Exclude = true, StripAfterObfuscation = true)]

      public bool Contains(Address address)
    parameters:
    - id: address
      type: Inetlab.MMS.MM7.Address
    return:
      type: System.Boolean
    content.vb: >-
      <Obfuscation(Exclude:=True, StripAfterObfuscation:=True)>

      Public Function Contains(address As Address) As Boolean
  overload: Inetlab.MMS.MM7.AddressCollection.Contains*
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: true
    - name: StripAfterObfuscation
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Inetlab.MMS.MM7
  commentId: N:Inetlab.MMS.MM7
  isExternal: false
  name: Inetlab.MMS.MM7
  nameWithType: Inetlab.MMS.MM7
  fullName: Inetlab.MMS.MM7
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.CollectionBase
  commentId: T:System.Collections.CollectionBase
  parent: System.Collections
  isExternal: true
  name: CollectionBase
  nameWithType: CollectionBase
  fullName: System.Collections.CollectionBase
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.CollectionBase.Clear
  commentId: M:System.Collections.CollectionBase.Clear
  parent: System.Collections.CollectionBase
  isExternal: true
  name: Clear()
  nameWithType: CollectionBase.Clear()
  fullName: System.Collections.CollectionBase.Clear()
  spec.csharp:
  - uid: System.Collections.CollectionBase.Clear
    name: Clear
    nameWithType: CollectionBase.Clear
    fullName: System.Collections.CollectionBase.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.Clear
    name: Clear
    nameWithType: CollectionBase.Clear
    fullName: System.Collections.CollectionBase.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
  commentId: M:System.Collections.CollectionBase.RemoveAt(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: CollectionBase.RemoveAt(Int32)
  fullName: System.Collections.CollectionBase.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: CollectionBase.RemoveAt
    fullName: System.Collections.CollectionBase.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: CollectionBase.RemoveAt
    fullName: System.Collections.CollectionBase.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: CollectionBase.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: CollectionBase.System.Collections.ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: CollectionBase.ICollection.CopyTo
    fullName: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: CollectionBase.System.Collections.ICollection.CopyTo
    fullName: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: CollectionBase.IList.get_Item(Int32)
  fullName: System.Collections.CollectionBase.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: CollectionBase.System.Collections.IList.get_Item(Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: CollectionBase.IList.get_Item
    fullName: System.Collections.CollectionBase.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: CollectionBase.System.Collections.IList.get_Item
    fullName: System.Collections.CollectionBase.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: CollectionBase.IList.set_Item(Int32, Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: CollectionBase.System.Collections.IList.set_Item(Int32, Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: CollectionBase.IList.set_Item
    fullName: System.Collections.CollectionBase.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: CollectionBase.System.Collections.IList.set_Item
    fullName: System.Collections.CollectionBase.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: CollectionBase.IList.Contains(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: CollectionBase.System.Collections.IList.Contains(Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: CollectionBase.IList.Contains
    fullName: System.Collections.CollectionBase.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: CollectionBase.System.Collections.IList.Contains
    fullName: System.Collections.CollectionBase.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.Add(Object)
  nameWithType: CollectionBase.IList.Add(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Add(System.Object)
  nameWithType.vb: CollectionBase.System.Collections.IList.Add(Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: CollectionBase.IList.Add
    fullName: System.Collections.CollectionBase.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: CollectionBase.System.Collections.IList.Add
    fullName: System.Collections.CollectionBase.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: CollectionBase.IList.Remove(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: CollectionBase.System.Collections.IList.Remove(Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: CollectionBase.IList.Remove
    fullName: System.Collections.CollectionBase.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: CollectionBase.System.Collections.IList.Remove
    fullName: System.Collections.CollectionBase.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: CollectionBase.IList.IndexOf(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: CollectionBase.System.Collections.IList.IndexOf(Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: CollectionBase.IList.IndexOf
    fullName: System.Collections.CollectionBase.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: CollectionBase.System.Collections.IList.IndexOf
    fullName: System.Collections.CollectionBase.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: CollectionBase.IList.Insert(Int32, Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: CollectionBase.System.Collections.IList.Insert(Int32, Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: CollectionBase.IList.Insert
    fullName: System.Collections.CollectionBase.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: CollectionBase.System.Collections.IList.Insert
    fullName: System.Collections.CollectionBase.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.GetEnumerator
  commentId: M:System.Collections.CollectionBase.GetEnumerator
  parent: System.Collections.CollectionBase
  isExternal: true
  name: GetEnumerator()
  nameWithType: CollectionBase.GetEnumerator()
  fullName: System.Collections.CollectionBase.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.CollectionBase.GetEnumerator
    name: GetEnumerator
    nameWithType: CollectionBase.GetEnumerator
    fullName: System.Collections.CollectionBase.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.GetEnumerator
    name: GetEnumerator
    nameWithType: CollectionBase.GetEnumerator
    fullName: System.Collections.CollectionBase.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  commentId: M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnSet(Int32, Object, Object)
  nameWithType: CollectionBase.OnSet(Int32, Object, Object)
  fullName: System.Collections.CollectionBase.OnSet(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
    name: OnSet
    nameWithType: CollectionBase.OnSet
    fullName: System.Collections.CollectionBase.OnSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
    name: OnSet
    nameWithType: CollectionBase.OnSet
    fullName: System.Collections.CollectionBase.OnSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnInsert(Int32, Object)
  nameWithType: CollectionBase.OnInsert(Int32, Object)
  fullName: System.Collections.CollectionBase.OnInsert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
    name: OnInsert
    nameWithType: CollectionBase.OnInsert
    fullName: System.Collections.CollectionBase.OnInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
    name: OnInsert
    nameWithType: CollectionBase.OnInsert
    fullName: System.Collections.CollectionBase.OnInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnClear
  commentId: M:System.Collections.CollectionBase.OnClear
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnClear()
  nameWithType: CollectionBase.OnClear()
  fullName: System.Collections.CollectionBase.OnClear()
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnClear
    name: OnClear
    nameWithType: CollectionBase.OnClear
    fullName: System.Collections.CollectionBase.OnClear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnClear
    name: OnClear
    nameWithType: CollectionBase.OnClear
    fullName: System.Collections.CollectionBase.OnClear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnRemove(Int32, Object)
  nameWithType: CollectionBase.OnRemove(Int32, Object)
  fullName: System.Collections.CollectionBase.OnRemove(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
    name: OnRemove
    nameWithType: CollectionBase.OnRemove
    fullName: System.Collections.CollectionBase.OnRemove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
    name: OnRemove
    nameWithType: CollectionBase.OnRemove
    fullName: System.Collections.CollectionBase.OnRemove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnValidate(System.Object)
  commentId: M:System.Collections.CollectionBase.OnValidate(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnValidate(Object)
  nameWithType: CollectionBase.OnValidate(Object)
  fullName: System.Collections.CollectionBase.OnValidate(System.Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnValidate(System.Object)
    name: OnValidate
    nameWithType: CollectionBase.OnValidate
    fullName: System.Collections.CollectionBase.OnValidate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnValidate(System.Object)
    name: OnValidate
    nameWithType: CollectionBase.OnValidate
    fullName: System.Collections.CollectionBase.OnValidate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  commentId: M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnSetComplete(Int32, Object, Object)
  nameWithType: CollectionBase.OnSetComplete(Int32, Object, Object)
  fullName: System.Collections.CollectionBase.OnSetComplete(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
    name: OnSetComplete
    nameWithType: CollectionBase.OnSetComplete
    fullName: System.Collections.CollectionBase.OnSetComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
    name: OnSetComplete
    nameWithType: CollectionBase.OnSetComplete
    fullName: System.Collections.CollectionBase.OnSetComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnInsertComplete(Int32, Object)
  nameWithType: CollectionBase.OnInsertComplete(Int32, Object)
  fullName: System.Collections.CollectionBase.OnInsertComplete(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
    name: OnInsertComplete
    nameWithType: CollectionBase.OnInsertComplete
    fullName: System.Collections.CollectionBase.OnInsertComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
    name: OnInsertComplete
    nameWithType: CollectionBase.OnInsertComplete
    fullName: System.Collections.CollectionBase.OnInsertComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnClearComplete
  commentId: M:System.Collections.CollectionBase.OnClearComplete
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnClearComplete()
  nameWithType: CollectionBase.OnClearComplete()
  fullName: System.Collections.CollectionBase.OnClearComplete()
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnClearComplete
    name: OnClearComplete
    nameWithType: CollectionBase.OnClearComplete
    fullName: System.Collections.CollectionBase.OnClearComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnClearComplete
    name: OnClearComplete
    nameWithType: CollectionBase.OnClearComplete
    fullName: System.Collections.CollectionBase.OnClearComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: OnRemoveComplete(Int32, Object)
  nameWithType: CollectionBase.OnRemoveComplete(Int32, Object)
  fullName: System.Collections.CollectionBase.OnRemoveComplete(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
    name: OnRemoveComplete
    nameWithType: CollectionBase.OnRemoveComplete
    fullName: System.Collections.CollectionBase.OnRemoveComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
    name: OnRemoveComplete
    nameWithType: CollectionBase.OnRemoveComplete
    fullName: System.Collections.CollectionBase.OnRemoveComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.CollectionBase.InnerList
  commentId: P:System.Collections.CollectionBase.InnerList
  parent: System.Collections.CollectionBase
  isExternal: true
  name: InnerList
  nameWithType: CollectionBase.InnerList
  fullName: System.Collections.CollectionBase.InnerList
- uid: System.Collections.CollectionBase.List
  commentId: P:System.Collections.CollectionBase.List
  parent: System.Collections.CollectionBase
  isExternal: true
  name: List
  nameWithType: CollectionBase.List
  fullName: System.Collections.CollectionBase.List
- uid: System.Collections.CollectionBase.Capacity
  commentId: P:System.Collections.CollectionBase.Capacity
  parent: System.Collections.CollectionBase
  isExternal: true
  name: Capacity
  nameWithType: CollectionBase.Capacity
  fullName: System.Collections.CollectionBase.Capacity
- uid: System.Collections.CollectionBase.Count
  commentId: P:System.Collections.CollectionBase.Count
  parent: System.Collections.CollectionBase
  isExternal: true
  name: Count
  nameWithType: CollectionBase.Count
  fullName: System.Collections.CollectionBase.Count
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: CollectionBase.IList.IsReadOnly
  fullName: System.Collections.CollectionBase.System.Collections.IList.IsReadOnly
  nameWithType.vb: CollectionBase.System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: CollectionBase.IList.IsFixedSize
  fullName: System.Collections.CollectionBase.System.Collections.IList.IsFixedSize
  nameWithType.vb: CollectionBase.System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.CollectionBase
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: CollectionBase.ICollection.IsSynchronized
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: CollectionBase.System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.CollectionBase
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: CollectionBase.ICollection.SyncRoot
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.SyncRoot
  nameWithType.vb: CollectionBase.System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: CollectionBase.IList.Item[Int32]
  fullName: System.Collections.CollectionBase.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: CollectionBase.System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.CollectionBase.System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: CollectionBase.IList.Item
    fullName: System.Collections.CollectionBase.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: CollectionBase.System.Collections.IList.Item
    fullName: System.Collections.CollectionBase.System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Inetlab.MMS.MM7.AddressCollection.#ctor*
  commentId: Overload:Inetlab.MMS.MM7.AddressCollection.#ctor
  isExternal: false
  name: AddressCollection
  nameWithType: AddressCollection.AddressCollection
  fullName: Inetlab.MMS.MM7.AddressCollection.AddressCollection
- uid: Inetlab.MMS.MM7.Address
  commentId: T:Inetlab.MMS.MM7.Address
  parent: Inetlab.MMS.MM7
  isExternal: false
  name: Address
  nameWithType: Address
  fullName: Inetlab.MMS.MM7.Address
- uid: Inetlab.MMS.MM7.AddressCollection.Add*
  commentId: Overload:Inetlab.MMS.MM7.AddressCollection.Add
  isExternal: false
  name: Add
  nameWithType: AddressCollection.Add
  fullName: Inetlab.MMS.MM7.AddressCollection.Add
- uid: Inetlab.MMS.MM7.AddressTypes
  commentId: T:Inetlab.MMS.MM7.AddressTypes
  parent: Inetlab.MMS.MM7
  isExternal: false
  name: AddressTypes
  nameWithType: AddressTypes
  fullName: Inetlab.MMS.MM7.AddressTypes
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Inetlab.MMS.MM7.AddressCollection.Remove*
  commentId: Overload:Inetlab.MMS.MM7.AddressCollection.Remove
  isExternal: false
  name: Remove
  nameWithType: AddressCollection.Remove
  fullName: Inetlab.MMS.MM7.AddressCollection.Remove
- uid: Inetlab.MMS.MM7.AddressCollection.Item*
  commentId: Overload:Inetlab.MMS.MM7.AddressCollection.Item
  isExternal: false
  name: Item
  nameWithType: AddressCollection.Item
  fullName: Inetlab.MMS.MM7.AddressCollection.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Inetlab.MMS.MM7.AddressCollection.Contains*
  commentId: Overload:Inetlab.MMS.MM7.AddressCollection.Contains
  isExternal: false
  name: Contains
  nameWithType: AddressCollection.Contains
  fullName: Inetlab.MMS.MM7.AddressCollection.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
