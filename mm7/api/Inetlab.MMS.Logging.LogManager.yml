### YamlMime:ManagedReference
items:
- uid: Inetlab.MMS.Logging.LogManager
  commentId: T:Inetlab.MMS.Logging.LogManager
  id: LogManager
  parent: Inetlab.MMS.Logging
  children:
  - Inetlab.MMS.Logging.LogManager.GetLogger(System.String)
  - Inetlab.MMS.Logging.LogManager.SetLoggerFactory(Inetlab.MMS.Logging.GetLoggerDelegate)
  langs:
  - csharp
  - vb
  name: LogManager
  nameWithType: LogManager
  fullName: Inetlab.MMS.Logging.LogManager
  type: Class
  source:
    remote:
      path: Source/CS/Logging/LogManager.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: LogManager
    path: ../Source/CS/Logging/LogManager.cs
    startLine: 2
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.Logging
  syntax:
    content: public static class LogManager
    content.vb: Public Module LogManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Inetlab.MMS.Logging.LogManager.GetLogger(System.String)
  commentId: M:Inetlab.MMS.Logging.LogManager.GetLogger(System.String)
  id: GetLogger(System.String)
  parent: Inetlab.MMS.Logging.LogManager
  langs:
  - csharp
  - vb
  name: GetLogger(String)
  nameWithType: LogManager.GetLogger(String)
  fullName: Inetlab.MMS.Logging.LogManager.GetLogger(System.String)
  type: Method
  source:
    remote:
      path: Source/CS/Logging/LogManager.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: GetLogger
    path: ../Source/CS/Logging/LogManager.cs
    startLine: 15
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.Logging
  syntax:
    content: public static ILog GetLogger(string loggerName)
    parameters:
    - id: loggerName
      type: System.String
    return:
      type: Inetlab.MMS.Logging.ILog
    content.vb: Public Shared Function GetLogger(loggerName As String) As ILog
  overload: Inetlab.MMS.Logging.LogManager.GetLogger*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Inetlab.MMS.Logging.LogManager.SetLoggerFactory(Inetlab.MMS.Logging.GetLoggerDelegate)
  commentId: M:Inetlab.MMS.Logging.LogManager.SetLoggerFactory(Inetlab.MMS.Logging.GetLoggerDelegate)
  id: SetLoggerFactory(Inetlab.MMS.Logging.GetLoggerDelegate)
  parent: Inetlab.MMS.Logging.LogManager
  langs:
  - csharp
  - vb
  name: SetLoggerFactory(GetLoggerDelegate)
  nameWithType: LogManager.SetLoggerFactory(GetLoggerDelegate)
  fullName: Inetlab.MMS.Logging.LogManager.SetLoggerFactory(Inetlab.MMS.Logging.GetLoggerDelegate)
  type: Method
  source:
    remote:
      path: Source/CS/Logging/LogManager.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.MMS.git
    id: SetLoggerFactory
    path: ../Source/CS/Logging/LogManager.cs
    startLine: 22
  assemblies:
  - Inetlab.MMS.MM7
  namespace: Inetlab.MMS.Logging
  syntax:
    content: public static void SetLoggerFactory(GetLoggerDelegate getLogger)
    parameters:
    - id: getLogger
      type: Inetlab.MMS.Logging.GetLoggerDelegate
    content.vb: Public Shared Sub SetLoggerFactory(getLogger As GetLoggerDelegate)
  overload: Inetlab.MMS.Logging.LogManager.SetLoggerFactory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Inetlab.MMS.Logging
  commentId: N:Inetlab.MMS.Logging
  isExternal: false
  name: Inetlab.MMS.Logging
  nameWithType: Inetlab.MMS.Logging
  fullName: Inetlab.MMS.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Inetlab.MMS.Logging.LogManager.GetLogger*
  commentId: Overload:Inetlab.MMS.Logging.LogManager.GetLogger
  isExternal: false
  name: GetLogger
  nameWithType: LogManager.GetLogger
  fullName: Inetlab.MMS.Logging.LogManager.GetLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Inetlab.MMS.Logging.ILog
  commentId: T:Inetlab.MMS.Logging.ILog
  parent: Inetlab.MMS.Logging
  isExternal: false
  name: ILog
  nameWithType: ILog
  fullName: Inetlab.MMS.Logging.ILog
- uid: Inetlab.MMS.Logging.LogManager.SetLoggerFactory*
  commentId: Overload:Inetlab.MMS.Logging.LogManager.SetLoggerFactory
  isExternal: false
  name: SetLoggerFactory
  nameWithType: LogManager.SetLoggerFactory
  fullName: Inetlab.MMS.Logging.LogManager.SetLoggerFactory
- uid: Inetlab.MMS.Logging.GetLoggerDelegate
  commentId: T:Inetlab.MMS.Logging.GetLoggerDelegate
  parent: Inetlab.MMS.Logging
  isExternal: false
  name: GetLoggerDelegate
  nameWithType: GetLoggerDelegate
  fullName: Inetlab.MMS.Logging.GetLoggerDelegate
