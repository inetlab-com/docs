### YamlMime:ManagedReference
items:
- uid: Inetlab.SMPP.Common.TLV
  commentId: T:Inetlab.SMPP.Common.TLV
  id: TLV
  parent: Inetlab.SMPP.Common
  children:
  - Inetlab.SMPP.Common.TLV.#ctor
  - Inetlab.SMPP.Common.TLV.#ctor(Inetlab.SMPP.Common.OptionalTags,System.Byte[])
  - Inetlab.SMPP.Common.TLV.#ctor(Inetlab.SMPP.Common.OptionalTags,System.UInt16,System.Byte[])
  - Inetlab.SMPP.Common.TLV.#ctor(System.UInt16,System.Byte[])
  - Inetlab.SMPP.Common.TLV.#ctor(System.UInt16,System.UInt16,System.Byte[])
  - Inetlab.SMPP.Common.TLV.Clone
  - Inetlab.SMPP.Common.TLV.GetHashCode
  - Inetlab.SMPP.Common.TLV.Length
  - Inetlab.SMPP.Common.TLV.Tag
  - Inetlab.SMPP.Common.TLV.TagValue
  - Inetlab.SMPP.Common.TLV.Value
  langs:
  - csharp
  - vb
  name: TLV
  nameWithType: TLV
  fullName: Inetlab.SMPP.Common.TLV
  type: Class
  source:
    id: TLV
    path: ''
    startLine: 12407
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  summary: "\nRepresents TLV (Tag, Length, Value) format for optional parameters.\n"
  example: []
  syntax:
    content: public class TLV
    content.vb: Public Class TLV
  inheritance:
  - System.Object
  derivedClasses:
  - Inetlab.SMPP.Common.Parameters.DPF
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Inetlab.SMPP.Common.TLV.Tag
  commentId: P:Inetlab.SMPP.Common.TLV.Tag
  id: Tag
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: TLV.Tag
  fullName: Inetlab.SMPP.Common.TLV.Tag
  type: Property
  source:
    id: Tag
    path: ''
    startLine: 12416
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  summary: "\nThe Tag field is used to uniquely identify the particular optional parameter.\n"
  example: []
  syntax:
    content: public ushort Tag { get; set; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Property Tag As UShort
  overload: Inetlab.SMPP.Common.TLV.Tag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLV.Length
  commentId: P:Inetlab.SMPP.Common.TLV.Length
  id: Length
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: TLV.Length
  fullName: Inetlab.SMPP.Common.TLV.Length
  type: Property
  source:
    id: Length
    path: ''
    startLine: 12425
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  summary: "\nIndicates the length of the Value property in octets.\n"
  example: []
  syntax:
    content: public ushort Length { get; set; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Property Length As UShort
  overload: Inetlab.SMPP.Common.TLV.Length*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLV.Value
  commentId: P:Inetlab.SMPP.Common.TLV.Value
  id: Value
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: TLV.Value
  fullName: Inetlab.SMPP.Common.TLV.Value
  type: Property
  source:
    id: Value
    path: ''
    startLine: 12434
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  summary: "\nContains the actual data for the optional parameter\n"
  example: []
  syntax:
    content: public byte[] Value { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Value As Byte()
  overload: Inetlab.SMPP.Common.TLV.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLV.#ctor
  commentId: M:Inetlab.SMPP.Common.TLV.#ctor
  id: '#ctor'
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: TLV()
  nameWithType: TLV.TLV()
  fullName: Inetlab.SMPP.Common.TLV.TLV()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 12440
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLV()
    content.vb: Public Sub New
  overload: Inetlab.SMPP.Common.TLV.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLV.#ctor(System.UInt16,System.Byte[])
  commentId: M:Inetlab.SMPP.Common.TLV.#ctor(System.UInt16,System.Byte[])
  id: '#ctor(System.UInt16,System.Byte[])'
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: TLV(UInt16, Byte[])
  nameWithType: TLV.TLV(UInt16, Byte[])
  fullName: Inetlab.SMPP.Common.TLV.TLV(System.UInt16, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 12446
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLV(ushort tag, byte[] val)
    parameters:
    - id: tag
      type: System.UInt16
    - id: val
      type: System.Byte[]
    content.vb: Public Sub New(tag As UShort, val As Byte())
  overload: Inetlab.SMPP.Common.TLV.#ctor*
  nameWithType.vb: TLV.TLV(UInt16, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLV.TLV(System.UInt16, System.Byte())
  name.vb: TLV(UInt16, Byte())
- uid: Inetlab.SMPP.Common.TLV.#ctor(System.UInt16,System.UInt16,System.Byte[])
  commentId: M:Inetlab.SMPP.Common.TLV.#ctor(System.UInt16,System.UInt16,System.Byte[])
  id: '#ctor(System.UInt16,System.UInt16,System.Byte[])'
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: TLV(UInt16, UInt16, Byte[])
  nameWithType: TLV.TLV(UInt16, UInt16, Byte[])
  fullName: Inetlab.SMPP.Common.TLV.TLV(System.UInt16, System.UInt16, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 12453
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLV(ushort tag, ushort length, byte[] val)
    parameters:
    - id: tag
      type: System.UInt16
    - id: length
      type: System.UInt16
    - id: val
      type: System.Byte[]
    content.vb: Public Sub New(tag As UShort, length As UShort, val As Byte())
  overload: Inetlab.SMPP.Common.TLV.#ctor*
  nameWithType.vb: TLV.TLV(UInt16, UInt16, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLV.TLV(System.UInt16, System.UInt16, System.Byte())
  name.vb: TLV(UInt16, UInt16, Byte())
- uid: Inetlab.SMPP.Common.TLV.#ctor(Inetlab.SMPP.Common.OptionalTags,System.Byte[])
  commentId: M:Inetlab.SMPP.Common.TLV.#ctor(Inetlab.SMPP.Common.OptionalTags,System.Byte[])
  id: '#ctor(Inetlab.SMPP.Common.OptionalTags,System.Byte[])'
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: TLV(OptionalTags, Byte[])
  nameWithType: TLV.TLV(OptionalTags, Byte[])
  fullName: Inetlab.SMPP.Common.TLV.TLV(Inetlab.SMPP.Common.OptionalTags, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 12460
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLV(OptionalTags tag, byte[] val)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: val
      type: System.Byte[]
    content.vb: Public Sub New(tag As OptionalTags, val As Byte())
  overload: Inetlab.SMPP.Common.TLV.#ctor*
  nameWithType.vb: TLV.TLV(OptionalTags, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLV.TLV(Inetlab.SMPP.Common.OptionalTags, System.Byte())
  name.vb: TLV(OptionalTags, Byte())
- uid: Inetlab.SMPP.Common.TLV.#ctor(Inetlab.SMPP.Common.OptionalTags,System.UInt16,System.Byte[])
  commentId: M:Inetlab.SMPP.Common.TLV.#ctor(Inetlab.SMPP.Common.OptionalTags,System.UInt16,System.Byte[])
  id: '#ctor(Inetlab.SMPP.Common.OptionalTags,System.UInt16,System.Byte[])'
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: TLV(OptionalTags, UInt16, Byte[])
  nameWithType: TLV.TLV(OptionalTags, UInt16, Byte[])
  fullName: Inetlab.SMPP.Common.TLV.TLV(Inetlab.SMPP.Common.OptionalTags, System.UInt16, System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 12468
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLV(OptionalTags tag, ushort length, byte[] val)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: length
      type: System.UInt16
    - id: val
      type: System.Byte[]
    content.vb: Public Sub New(tag As OptionalTags, length As UShort, val As Byte())
  overload: Inetlab.SMPP.Common.TLV.#ctor*
  nameWithType.vb: TLV.TLV(OptionalTags, UInt16, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLV.TLV(Inetlab.SMPP.Common.OptionalTags, System.UInt16, System.Byte())
  name.vb: TLV(OptionalTags, UInt16, Byte())
- uid: Inetlab.SMPP.Common.TLV.TagValue
  commentId: P:Inetlab.SMPP.Common.TLV.TagValue
  id: TagValue
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: TagValue
  nameWithType: TLV.TagValue
  fullName: Inetlab.SMPP.Common.TLV.TagValue
  type: Property
  source:
    id: TagValue
    path: ''
    startLine: 12478
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  summary: "\nIdentifies the particular optional parameter.\n"
  example: []
  syntax:
    content: public OptionalTags TagValue { get; set; }
    parameters: []
    return:
      type: Inetlab.SMPP.Common.OptionalTags
    content.vb: Public Property TagValue As OptionalTags
  overload: Inetlab.SMPP.Common.TLV.TagValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLV.GetHashCode
  commentId: M:Inetlab.SMPP.Common.TLV.GetHashCode
  id: GetHashCode
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TLV.GetHashCode()
  fullName: Inetlab.SMPP.Common.TLV.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 12491
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Inetlab.SMPP.Common.TLV.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Inetlab.SMPP.Common.TLV.Clone
  commentId: M:Inetlab.SMPP.Common.TLV.Clone
  id: Clone
  parent: Inetlab.SMPP.Common.TLV
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: TLV.Clone()
  fullName: Inetlab.SMPP.Common.TLV.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 12496
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLV Clone()
    return:
      type: Inetlab.SMPP.Common.TLV
    content.vb: Public Function Clone As TLV
  overload: Inetlab.SMPP.Common.TLV.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Inetlab.SMPP.Common
  commentId: N:Inetlab.SMPP.Common
  name: Inetlab.SMPP.Common
  nameWithType: Inetlab.SMPP.Common
  fullName: Inetlab.SMPP.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Inetlab.SMPP.Common.TLV.Tag*
  commentId: Overload:Inetlab.SMPP.Common.TLV.Tag
  name: Tag
  nameWithType: TLV.Tag
  fullName: Inetlab.SMPP.Common.TLV.Tag
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Inetlab.SMPP.Common.TLV.Length*
  commentId: Overload:Inetlab.SMPP.Common.TLV.Length
  name: Length
  nameWithType: TLV.Length
  fullName: Inetlab.SMPP.Common.TLV.Length
- uid: Inetlab.SMPP.Common.TLV.Value*
  commentId: Overload:Inetlab.SMPP.Common.TLV.Value
  name: Value
  nameWithType: TLV.Value
  fullName: Inetlab.SMPP.Common.TLV.Value
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Inetlab.SMPP.Common.TLV.#ctor*
  commentId: Overload:Inetlab.SMPP.Common.TLV.#ctor
  name: TLV
  nameWithType: TLV.TLV
  fullName: Inetlab.SMPP.Common.TLV.TLV
- uid: Inetlab.SMPP.Common.OptionalTags
  commentId: T:Inetlab.SMPP.Common.OptionalTags
  parent: Inetlab.SMPP.Common
  name: OptionalTags
  nameWithType: OptionalTags
  fullName: Inetlab.SMPP.Common.OptionalTags
- uid: Inetlab.SMPP.Common.TLV.TagValue*
  commentId: Overload:Inetlab.SMPP.Common.TLV.TagValue
  name: TagValue
  nameWithType: TLV.TagValue
  fullName: Inetlab.SMPP.Common.TLV.TagValue
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Inetlab.SMPP.Common.TLV.GetHashCode*
  commentId: Overload:Inetlab.SMPP.Common.TLV.GetHashCode
  name: GetHashCode
  nameWithType: TLV.GetHashCode
  fullName: Inetlab.SMPP.Common.TLV.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Inetlab.SMPP.Common.TLV.Clone*
  commentId: Overload:Inetlab.SMPP.Common.TLV.Clone
  name: Clone
  nameWithType: TLV.Clone
  fullName: Inetlab.SMPP.Common.TLV.Clone
- uid: Inetlab.SMPP.Common.TLV
  commentId: T:Inetlab.SMPP.Common.TLV
  parent: Inetlab.SMPP.Common
  name: TLV
  nameWithType: TLV
  fullName: Inetlab.SMPP.Common.TLV
shouldSkipMarkup: true
