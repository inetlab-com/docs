### YamlMime:ManagedReference
items:
- uid: Inetlab.SMPP.Common.ByteArray
  commentId: T:Inetlab.SMPP.Common.ByteArray
  id: ByteArray
  parent: Inetlab.SMPP.Common
  children:
  - Inetlab.SMPP.Common.ByteArray.FromHexString(System.String)
  - Inetlab.SMPP.Common.ByteArray.ToHexString(System.Byte[])
  - Inetlab.SMPP.Common.ByteArray.ToUShort(System.Byte[])
  langs:
  - csharp
  - vb
  name: ByteArray
  nameWithType: ByteArray
  fullName: Inetlab.SMPP.Common.ByteArray
  type: Class
  source:
    remote:
      path: Source/CS/Common/ByteArrayExtension.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: ByteArray
    path: ../Source/CS/Common/ByteArrayExtension.cs
    startLine: 8
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public static class ByteArray
    content.vb: Public Module ByteArray
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Inetlab.SMPP.Common.ByteArray.ToHexString(System.Byte[])
  commentId: M:Inetlab.SMPP.Common.ByteArray.ToHexString(System.Byte[])
  id: ToHexString(System.Byte[])
  parent: Inetlab.SMPP.Common.ByteArray
  langs:
  - csharp
  - vb
  name: ToHexString(Byte[])
  nameWithType: ByteArray.ToHexString(Byte[])
  fullName: Inetlab.SMPP.Common.ByteArray.ToHexString(System.Byte[])
  type: Method
  source:
    remote:
      path: Source/CS/Common/ByteArrayExtension.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: ToHexString
    path: ../Source/CS/Common/ByteArrayExtension.cs
    startLine: 10
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public static string ToHexString(byte[] buf)
    parameters:
    - id: buf
      type: System.Byte[]
    return:
      type: System.String
    content.vb: Public Shared Function ToHexString(buf As Byte()) As String
  overload: Inetlab.SMPP.Common.ByteArray.ToHexString*
  nameWithType.vb: ByteArray.ToHexString(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Inetlab.SMPP.Common.ByteArray.ToHexString(System.Byte())
  name.vb: ToHexString(Byte())
- uid: Inetlab.SMPP.Common.ByteArray.FromHexString(System.String)
  commentId: M:Inetlab.SMPP.Common.ByteArray.FromHexString(System.String)
  id: FromHexString(System.String)
  parent: Inetlab.SMPP.Common.ByteArray
  langs:
  - csharp
  - vb
  name: FromHexString(String)
  nameWithType: ByteArray.FromHexString(String)
  fullName: Inetlab.SMPP.Common.ByteArray.FromHexString(System.String)
  type: Method
  source:
    remote:
      path: Source/CS/Common/ByteArrayExtension.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: FromHexString
    path: ../Source/CS/Common/ByteArrayExtension.cs
    startLine: 22
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public static byte[] FromHexString(string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Shared Function FromHexString(str As String) As Byte()
  overload: Inetlab.SMPP.Common.ByteArray.FromHexString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Inetlab.SMPP.Common.ByteArray.ToUShort(System.Byte[])
  commentId: M:Inetlab.SMPP.Common.ByteArray.ToUShort(System.Byte[])
  id: ToUShort(System.Byte[])
  parent: Inetlab.SMPP.Common.ByteArray
  langs:
  - csharp
  - vb
  name: ToUShort(Byte[])
  nameWithType: ByteArray.ToUShort(Byte[])
  fullName: Inetlab.SMPP.Common.ByteArray.ToUShort(System.Byte[])
  type: Method
  source:
    remote:
      path: Source/CS/Common/ByteArrayExtension.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: ToUShort
    path: ../Source/CS/Common/ByteArrayExtension.cs
    startLine: 38
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public static ushort ToUShort(byte[] buf)
    parameters:
    - id: buf
      type: System.Byte[]
    return:
      type: System.UInt16
    content.vb: Public Shared Function ToUShort(buf As Byte()) As UShort
  overload: Inetlab.SMPP.Common.ByteArray.ToUShort*
  nameWithType.vb: ByteArray.ToUShort(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Inetlab.SMPP.Common.ByteArray.ToUShort(System.Byte())
  name.vb: ToUShort(Byte())
references:
- uid: Inetlab.SMPP.Common
  commentId: N:Inetlab.SMPP.Common
  isExternal: false
  name: Inetlab.SMPP.Common
  nameWithType: Inetlab.SMPP.Common
  fullName: Inetlab.SMPP.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Inetlab.SMPP.Common.ByteArray.ToHexString*
  commentId: Overload:Inetlab.SMPP.Common.ByteArray.ToHexString
  isExternal: false
  name: ToHexString
  nameWithType: ByteArray.ToHexString
  fullName: Inetlab.SMPP.Common.ByteArray.ToHexString
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Inetlab.SMPP.Common.ByteArray.FromHexString*
  commentId: Overload:Inetlab.SMPP.Common.ByteArray.FromHexString
  isExternal: false
  name: FromHexString
  nameWithType: ByteArray.FromHexString
  fullName: Inetlab.SMPP.Common.ByteArray.FromHexString
- uid: Inetlab.SMPP.Common.ByteArray.ToUShort*
  commentId: Overload:Inetlab.SMPP.Common.ByteArray.ToUShort
  isExternal: false
  name: ToUShort
  nameWithType: ByteArray.ToUShort
  fullName: Inetlab.SMPP.Common.ByteArray.ToUShort
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
