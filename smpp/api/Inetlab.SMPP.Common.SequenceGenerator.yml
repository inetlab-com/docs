### YamlMime:ManagedReference
items:
- uid: Inetlab.SMPP.Common.SequenceGenerator
  commentId: T:Inetlab.SMPP.Common.SequenceGenerator
  id: SequenceGenerator
  parent: Inetlab.SMPP.Common
  children:
  - Inetlab.SMPP.Common.SequenceGenerator.NextReferenceNumber
  - Inetlab.SMPP.Common.SequenceGenerator.NextSequenceNumber
  langs:
  - csharp
  - vb
  name: SequenceGenerator
  nameWithType: SequenceGenerator
  fullName: Inetlab.SMPP.Common.SequenceGenerator
  type: Class
  source:
    remote:
      path: Source/CS/Common/SequenceGenerator.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: SequenceGenerator
    path: ../Source/CS/Common/SequenceGenerator.cs
    startLine: 17
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: 'public class SequenceGenerator : ISequenceGenerator'
    content.vb: >-
      Public Class SequenceGenerator

          Implements ISequenceGenerator
  inheritance:
  - System.Object
  implements:
  - Inetlab.SMPP.Common.ISequenceGenerator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Inetlab.SMPP.Common.SequenceGenerator.NextSequenceNumber
  commentId: M:Inetlab.SMPP.Common.SequenceGenerator.NextSequenceNumber
  id: NextSequenceNumber
  parent: Inetlab.SMPP.Common.SequenceGenerator
  langs:
  - csharp
  - vb
  name: NextSequenceNumber()
  nameWithType: SequenceGenerator.NextSequenceNumber()
  fullName: Inetlab.SMPP.Common.SequenceGenerator.NextSequenceNumber()
  type: Method
  source:
    remote:
      path: Source/CS/Common/SequenceGenerator.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: NextSequenceNumber
    path: ../Source/CS/Common/SequenceGenerator.cs
    startLine: 26
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public uint NextSequenceNumber()
    return:
      type: System.UInt32
    content.vb: Public Function NextSequenceNumber As UInteger
  overload: Inetlab.SMPP.Common.SequenceGenerator.NextSequenceNumber*
  implements:
  - Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.SequenceGenerator.NextReferenceNumber
  commentId: M:Inetlab.SMPP.Common.SequenceGenerator.NextReferenceNumber
  id: NextReferenceNumber
  parent: Inetlab.SMPP.Common.SequenceGenerator
  langs:
  - csharp
  - vb
  name: NextReferenceNumber()
  nameWithType: SequenceGenerator.NextReferenceNumber()
  fullName: Inetlab.SMPP.Common.SequenceGenerator.NextReferenceNumber()
  type: Method
  source:
    remote:
      path: Source/CS/Common/SequenceGenerator.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: NextReferenceNumber
    path: ../Source/CS/Common/SequenceGenerator.cs
    startLine: 39
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public byte NextReferenceNumber()
    return:
      type: System.Byte
    content.vb: Public Function NextReferenceNumber As Byte
  overload: Inetlab.SMPP.Common.SequenceGenerator.NextReferenceNumber*
  implements:
  - Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Inetlab.SMPP.Common
  commentId: N:Inetlab.SMPP.Common
  isExternal: false
  name: Inetlab.SMPP.Common
  nameWithType: Inetlab.SMPP.Common
  fullName: Inetlab.SMPP.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Inetlab.SMPP.Common.ISequenceGenerator
  commentId: T:Inetlab.SMPP.Common.ISequenceGenerator
  parent: Inetlab.SMPP.Common
  isExternal: false
  name: ISequenceGenerator
  nameWithType: ISequenceGenerator
  fullName: Inetlab.SMPP.Common.ISequenceGenerator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Inetlab.SMPP.Common.SequenceGenerator.NextSequenceNumber*
  commentId: Overload:Inetlab.SMPP.Common.SequenceGenerator.NextSequenceNumber
  isExternal: false
  name: NextSequenceNumber
  nameWithType: SequenceGenerator.NextSequenceNumber
  fullName: Inetlab.SMPP.Common.SequenceGenerator.NextSequenceNumber
- uid: Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber
  commentId: M:Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber
  parent: Inetlab.SMPP.Common.ISequenceGenerator
  isExternal: false
  name: NextSequenceNumber()
  nameWithType: ISequenceGenerator.NextSequenceNumber()
  fullName: Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber()
  spec.csharp:
  - uid: Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber
    name: NextSequenceNumber
    nameWithType: ISequenceGenerator.NextSequenceNumber
    fullName: Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber
    name: NextSequenceNumber
    nameWithType: ISequenceGenerator.NextSequenceNumber
    fullName: Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Inetlab.SMPP.Common.SequenceGenerator.NextReferenceNumber*
  commentId: Overload:Inetlab.SMPP.Common.SequenceGenerator.NextReferenceNumber
  isExternal: false
  name: NextReferenceNumber
  nameWithType: SequenceGenerator.NextReferenceNumber
  fullName: Inetlab.SMPP.Common.SequenceGenerator.NextReferenceNumber
- uid: Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber
  commentId: M:Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber
  parent: Inetlab.SMPP.Common.ISequenceGenerator
  isExternal: false
  name: NextReferenceNumber()
  nameWithType: ISequenceGenerator.NextReferenceNumber()
  fullName: Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber()
  spec.csharp:
  - uid: Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber
    name: NextReferenceNumber
    nameWithType: ISequenceGenerator.NextReferenceNumber
    fullName: Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber
    name: NextReferenceNumber
    nameWithType: ISequenceGenerator.NextReferenceNumber
    fullName: Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
