### YamlMime:ManagedReference
items:
- uid: Inetlab.SMPP.Common.TLVCollection
  commentId: T:Inetlab.SMPP.Common.TLVCollection
  id: TLVCollection
  parent: Inetlab.SMPP.Common
  children:
  - Inetlab.SMPP.Common.TLVCollection.#ctor
  - Inetlab.SMPP.Common.TLVCollection.#ctor(Inetlab.SMPP.Common.EncodingMapper)
  - Inetlab.SMPP.Common.TLVCollection.#ctor(Inetlab.SMPP.Common.SmppClientBase)
  - Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Byte)
  - Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Byte[])
  - Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Int32)
  - Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.String)
  - Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.String,Inetlab.SMPP.Common.DataCodings)
  - Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.UInt16)
  - Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.UInt32)
  - Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.TLV)
  - Inetlab.SMPP.Common.TLVCollection.AddMessagePayload(System.Byte[])
  - Inetlab.SMPP.Common.TLVCollection.AddMoreMessagesToSend(System.Boolean)
  - Inetlab.SMPP.Common.TLVCollection.AddSARReferenceNumber(System.UInt16)
  - Inetlab.SMPP.Common.TLVCollection.AddSARSequenceNumber(System.Byte)
  - Inetlab.SMPP.Common.TLVCollection.AddSARTotalSegments(System.Byte)
  - Inetlab.SMPP.Common.TLVCollection.Item(Inetlab.SMPP.Common.OptionalTags)
  - Inetlab.SMPP.Common.TLVCollection.Item(System.Int32)
  - Inetlab.SMPP.Common.TLVCollection.Item(System.UInt16)
  langs:
  - csharp
  - vb
  name: TLVCollection
  nameWithType: TLVCollection
  fullName: Inetlab.SMPP.Common.TLVCollection
  type: Class
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: TLVCollection
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 9
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  summary: "\nCollection of optional parameters in TLV format.\n"
  example: []
  syntax:
    content: 'public class TLVCollection : List<TLV>, IList<TLV>, ICollection<TLV>, IEnumerable<TLV>, IList, ICollection, IEnumerable'
    content.vb: >-
      Public Class TLVCollection
          Inherits List(Of TLV)
          Implements IList(Of TLV), ICollection(Of TLV), IEnumerable(Of TLV), IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  implements:
  - System.Collections.Generic.IList{Inetlab.SMPP.Common.TLV}
  - System.Collections.Generic.ICollection{Inetlab.SMPP.Common.TLV}
  - System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.AddRange(System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.AsReadOnly
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(System.Int32,System.Int32,Inetlab.SMPP.Common.TLV,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(Inetlab.SMPP.Common.TLV)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(Inetlab.SMPP.Common.TLV,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Clear
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Contains(Inetlab.SMPP.Common.TLV)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ConvertAll``1(System.Converter{Inetlab.SMPP.Common.TLV,{TOutput}})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(Inetlab.SMPP.Common.TLV[])
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(System.Int32,Inetlab.SMPP.Common.TLV[],System.Int32,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(Inetlab.SMPP.Common.TLV[],System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Exists(System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Find(System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Int32,System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLast(System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Int32,System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ForEach(System.Action{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.GetEnumerator
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV,System.Int32,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Insert(System.Int32,Inetlab.SMPP.Common.TLV)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV,System.Int32,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Remove(Inetlab.SMPP.Common.TLV)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Reverse
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Comparison{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ToArray
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.TrimExcess
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.TrueForAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Capacity
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Count
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Item(System.Int32)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Inetlab.SMPP.Common.TLVCollection.#ctor
  commentId: M:Inetlab.SMPP.Common.TLVCollection.#ctor
  id: '#ctor'
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: TLVCollection()
  nameWithType: TLVCollection.TLVCollection()
  fullName: Inetlab.SMPP.Common.TLVCollection.TLVCollection()
  type: Constructor
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: .ctor
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 13
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLVCollection()
    content.vb: Public Sub New
  overload: Inetlab.SMPP.Common.TLVCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.#ctor(Inetlab.SMPP.Common.SmppClientBase)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.#ctor(Inetlab.SMPP.Common.SmppClientBase)
  id: '#ctor(Inetlab.SMPP.Common.SmppClientBase)'
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: TLVCollection(SmppClientBase)
  nameWithType: TLVCollection.TLVCollection(SmppClientBase)
  fullName: Inetlab.SMPP.Common.TLVCollection.TLVCollection(Inetlab.SMPP.Common.SmppClientBase)
  type: Constructor
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: .ctor
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 15
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLVCollection(SmppClientBase client)
    parameters:
    - id: client
      type: Inetlab.SMPP.Common.SmppClientBase
    content.vb: Public Sub New(client As SmppClientBase)
  overload: Inetlab.SMPP.Common.TLVCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.#ctor(Inetlab.SMPP.Common.EncodingMapper)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.#ctor(Inetlab.SMPP.Common.EncodingMapper)
  id: '#ctor(Inetlab.SMPP.Common.EncodingMapper)'
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: TLVCollection(EncodingMapper)
  nameWithType: TLVCollection.TLVCollection(EncodingMapper)
  fullName: Inetlab.SMPP.Common.TLVCollection.TLVCollection(Inetlab.SMPP.Common.EncodingMapper)
  type: Constructor
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: .ctor
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 20
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLVCollection(EncodingMapper mapper)
    parameters:
    - id: mapper
      type: Inetlab.SMPP.Common.EncodingMapper
    content.vb: Public Sub New(mapper As EncodingMapper)
  overload: Inetlab.SMPP.Common.TLVCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.Item(System.Int32)
  commentId: P:Inetlab.SMPP.Common.TLVCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TLVCollection.Item[Int32]
  fullName: Inetlab.SMPP.Common.TLVCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: this[]
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 25
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLV this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Inetlab.SMPP.Common.TLV
    content.vb: Public Property Item(index As Integer) As TLV
  overload: Inetlab.SMPP.Common.TLVCollection.Item*
  nameWithType.vb: TLVCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLVCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Inetlab.SMPP.Common.TLVCollection.Item(System.UInt16)
  commentId: P:Inetlab.SMPP.Common.TLVCollection.Item(System.UInt16)
  id: Item(System.UInt16)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Item[UInt16]
  nameWithType: TLVCollection.Item[UInt16]
  fullName: Inetlab.SMPP.Common.TLVCollection.Item[System.UInt16]
  type: Property
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: this[]
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 31
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public TLV this[ushort tag] { get; set; }
    parameters:
    - id: tag
      type: System.UInt16
    return:
      type: Inetlab.SMPP.Common.TLV
    content.vb: Public Property Item(tag As UShort) As TLV
  overload: Inetlab.SMPP.Common.TLVCollection.Item*
  nameWithType.vb: TLVCollection.Item(UInt16)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLVCollection.Item(System.UInt16)
  name.vb: Item(UInt16)
- uid: Inetlab.SMPP.Common.TLVCollection.Item(Inetlab.SMPP.Common.OptionalTags)
  commentId: P:Inetlab.SMPP.Common.TLVCollection.Item(Inetlab.SMPP.Common.OptionalTags)
  id: Item(Inetlab.SMPP.Common.OptionalTags)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Item[OptionalTags]
  nameWithType: TLVCollection.Item[OptionalTags]
  fullName: Inetlab.SMPP.Common.TLVCollection.Item[Inetlab.SMPP.Common.OptionalTags]
  type: Property
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: this[]
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 63
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public byte[] this[OptionalTags tag] { get; set; }
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    return:
      type: System.Byte[]
    content.vb: Public Property Item(tag As OptionalTags) As Byte()
  overload: Inetlab.SMPP.Common.TLVCollection.Item*
  nameWithType.vb: TLVCollection.Item(OptionalTags)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLVCollection.Item(Inetlab.SMPP.Common.OptionalTags)
  name.vb: Item(OptionalTags)
- uid: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.TLV)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.TLV)
  id: Add(Inetlab.SMPP.Common.TLV)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Add(TLV)
  nameWithType: TLVCollection.Add(TLV)
  fullName: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.TLV)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Add
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 85
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Add(TLV tlv)
    parameters:
    - id: tlv
      type: Inetlab.SMPP.Common.TLV
    content.vb: Public Sub Add(tlv As TLV)
  overload: Inetlab.SMPP.Common.TLVCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.AddSARReferenceNumber(System.UInt16)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.AddSARReferenceNumber(System.UInt16)
  id: AddSARReferenceNumber(System.UInt16)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: AddSARReferenceNumber(UInt16)
  nameWithType: TLVCollection.AddSARReferenceNumber(UInt16)
  fullName: Inetlab.SMPP.Common.TLVCollection.AddSARReferenceNumber(System.UInt16)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: AddSARReferenceNumber
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 90
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void AddSARReferenceNumber(ushort val)
    parameters:
    - id: val
      type: System.UInt16
    content.vb: Public Sub AddSARReferenceNumber(val As UShort)
  overload: Inetlab.SMPP.Common.TLVCollection.AddSARReferenceNumber*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.AddSARSequenceNumber(System.Byte)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.AddSARSequenceNumber(System.Byte)
  id: AddSARSequenceNumber(System.Byte)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: AddSARSequenceNumber(Byte)
  nameWithType: TLVCollection.AddSARSequenceNumber(Byte)
  fullName: Inetlab.SMPP.Common.TLVCollection.AddSARSequenceNumber(System.Byte)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: AddSARSequenceNumber
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 100
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void AddSARSequenceNumber(byte val)
    parameters:
    - id: val
      type: System.Byte
    content.vb: Public Sub AddSARSequenceNumber(val As Byte)
  overload: Inetlab.SMPP.Common.TLVCollection.AddSARSequenceNumber*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.AddSARTotalSegments(System.Byte)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.AddSARTotalSegments(System.Byte)
  id: AddSARTotalSegments(System.Byte)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: AddSARTotalSegments(Byte)
  nameWithType: TLVCollection.AddSARTotalSegments(Byte)
  fullName: Inetlab.SMPP.Common.TLVCollection.AddSARTotalSegments(System.Byte)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: AddSARTotalSegments
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 110
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void AddSARTotalSegments(byte val)
    parameters:
    - id: val
      type: System.Byte
    content.vb: Public Sub AddSARTotalSegments(val As Byte)
  overload: Inetlab.SMPP.Common.TLVCollection.AddSARTotalSegments*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.AddMoreMessagesToSend(System.Boolean)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.AddMoreMessagesToSend(System.Boolean)
  id: AddMoreMessagesToSend(System.Boolean)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: AddMoreMessagesToSend(Boolean)
  nameWithType: TLVCollection.AddMoreMessagesToSend(Boolean)
  fullName: Inetlab.SMPP.Common.TLVCollection.AddMoreMessagesToSend(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: AddMoreMessagesToSend
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 120
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void AddMoreMessagesToSend(bool val)
    parameters:
    - id: val
      type: System.Boolean
    content.vb: Public Sub AddMoreMessagesToSend(val As Boolean)
  overload: Inetlab.SMPP.Common.TLVCollection.AddMoreMessagesToSend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.AddMessagePayload(System.Byte[])
  commentId: M:Inetlab.SMPP.Common.TLVCollection.AddMessagePayload(System.Byte[])
  id: AddMessagePayload(System.Byte[])
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: AddMessagePayload(Byte[])
  nameWithType: TLVCollection.AddMessagePayload(Byte[])
  fullName: Inetlab.SMPP.Common.TLVCollection.AddMessagePayload(System.Byte[])
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: AddMessagePayload
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 132
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void AddMessagePayload(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    content.vb: Public Sub AddMessagePayload(data As Byte())
  overload: Inetlab.SMPP.Common.TLVCollection.AddMessagePayload*
  nameWithType.vb: TLVCollection.AddMessagePayload(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLVCollection.AddMessagePayload(System.Byte())
  name.vb: AddMessagePayload(Byte())
- uid: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Byte[])
  commentId: M:Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Byte[])
  id: Add(Inetlab.SMPP.Common.OptionalTags,System.Byte[])
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Add(OptionalTags, Byte[])
  nameWithType: TLVCollection.Add(OptionalTags, Byte[])
  fullName: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags, System.Byte[])
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Add
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 142
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Add(OptionalTags tag, byte[] val)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: val
      type: System.Byte[]
    content.vb: Public Sub Add(tag As OptionalTags, val As Byte())
  overload: Inetlab.SMPP.Common.TLVCollection.Add*
  nameWithType.vb: TLVCollection.Add(OptionalTags, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags, System.Byte())
  name.vb: Add(OptionalTags, Byte())
- uid: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Int32)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Int32)
  id: Add(Inetlab.SMPP.Common.OptionalTags,System.Int32)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Add(OptionalTags, Int32)
  nameWithType: TLVCollection.Add(OptionalTags, Int32)
  fullName: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags, System.Int32)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Add
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 147
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Add(OptionalTags tag, int val)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: val
      type: System.Int32
    content.vb: Public Sub Add(tag As OptionalTags, val As Integer)
  overload: Inetlab.SMPP.Common.TLVCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.UInt32)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.UInt32)
  id: Add(Inetlab.SMPP.Common.OptionalTags,System.UInt32)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Add(OptionalTags, UInt32)
  nameWithType: TLVCollection.Add(OptionalTags, UInt32)
  fullName: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags, System.UInt32)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Add
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 154
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Add(OptionalTags tag, uint val)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: val
      type: System.UInt32
    content.vb: Public Sub Add(tag As OptionalTags, val As UInteger)
  overload: Inetlab.SMPP.Common.TLVCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.UInt16)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.UInt16)
  id: Add(Inetlab.SMPP.Common.OptionalTags,System.UInt16)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Add(OptionalTags, UInt16)
  nameWithType: TLVCollection.Add(OptionalTags, UInt16)
  fullName: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags, System.UInt16)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Add
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 161
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Add(OptionalTags tag, ushort val)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: val
      type: System.UInt16
    content.vb: Public Sub Add(tag As OptionalTags, val As UShort)
  overload: Inetlab.SMPP.Common.TLVCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Byte)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.Byte)
  id: Add(Inetlab.SMPP.Common.OptionalTags,System.Byte)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Add(OptionalTags, Byte)
  nameWithType: TLVCollection.Add(OptionalTags, Byte)
  fullName: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags, System.Byte)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Add
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 168
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Add(OptionalTags tag, byte val)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: val
      type: System.Byte
    content.vb: Public Sub Add(tag As OptionalTags, val As Byte)
  overload: Inetlab.SMPP.Common.TLVCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.String,Inetlab.SMPP.Common.DataCodings)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.String,Inetlab.SMPP.Common.DataCodings)
  id: Add(Inetlab.SMPP.Common.OptionalTags,System.String,Inetlab.SMPP.Common.DataCodings)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Add(OptionalTags, String, DataCodings)
  nameWithType: TLVCollection.Add(OptionalTags, String, DataCodings)
  fullName: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags, System.String, Inetlab.SMPP.Common.DataCodings)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Add
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 175
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Add(OptionalTags tag, string val, DataCodings dataCoding)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: val
      type: System.String
    - id: dataCoding
      type: Inetlab.SMPP.Common.DataCodings
    content.vb: Public Sub Add(tag As OptionalTags, val As String, dataCoding As DataCodings)
  overload: Inetlab.SMPP.Common.TLVCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.String)
  commentId: M:Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags,System.String)
  id: Add(Inetlab.SMPP.Common.OptionalTags,System.String)
  parent: Inetlab.SMPP.Common.TLVCollection
  langs:
  - csharp
  - vb
  name: Add(OptionalTags, String)
  nameWithType: TLVCollection.Add(OptionalTags, String)
  fullName: Inetlab.SMPP.Common.TLVCollection.Add(Inetlab.SMPP.Common.OptionalTags, System.String)
  type: Method
  source:
    remote:
      path: Source/CS/Common/TLVCollection.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Add
    path: ../Source/CS/Common/TLVCollection.cs
    startLine: 185
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Add(OptionalTags tag, string val)
    parameters:
    - id: tag
      type: Inetlab.SMPP.Common.OptionalTags
    - id: val
      type: System.String
    content.vb: Public Sub Add(tag As OptionalTags, val As String)
  overload: Inetlab.SMPP.Common.TLVCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Inetlab.SMPP.Common
  commentId: N:Inetlab.SMPP.Common
  isExternal: false
  name: Inetlab.SMPP.Common
  nameWithType: Inetlab.SMPP.Common
  fullName: Inetlab.SMPP.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  commentId: T:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TLV>
  nameWithType: List<TLV>
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>
  nameWithType.vb: List(Of TLV)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV)
  name.vb: List(Of TLV)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Inetlab.SMPP.Common.TLV}
  commentId: T:System.Collections.Generic.IList{Inetlab.SMPP.Common.TLV}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TLV>
  nameWithType: IList<TLV>
  fullName: System.Collections.Generic.IList<Inetlab.SMPP.Common.TLV>
  nameWithType.vb: IList(Of TLV)
  fullName.vb: System.Collections.Generic.IList(Of Inetlab.SMPP.Common.TLV)
  name.vb: IList(Of TLV)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Inetlab.SMPP.Common.TLV}
  commentId: T:System.Collections.Generic.ICollection{Inetlab.SMPP.Common.TLV}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TLV>
  nameWithType: ICollection<TLV>
  fullName: System.Collections.Generic.ICollection<Inetlab.SMPP.Common.TLV>
  nameWithType.vb: ICollection(Of TLV)
  fullName.vb: System.Collections.Generic.ICollection(Of Inetlab.SMPP.Common.TLV)
  name.vb: ICollection(Of TLV)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV}
  commentId: T:System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TLV>
  nameWithType: IEnumerable<TLV>
  fullName: System.Collections.Generic.IEnumerable<Inetlab.SMPP.Common.TLV>
  nameWithType.vb: IEnumerable(Of TLV)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Inetlab.SMPP.Common.TLV)
  name.vb: IEnumerable(Of TLV)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: List<TLV>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of TLV).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<TLV>.IList.get_Item
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of TLV).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: List<TLV>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of TLV).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<TLV>.IList.set_Item
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of TLV).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: List<TLV>.IList.Add(Object)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of TLV).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<TLV>.IList.Add
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of TLV).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.AddRange(System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.AddRange(System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<TLV>)
  nameWithType: List<TLV>.AddRange(IEnumerable<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.AddRange(System.Collections.Generic.IEnumerable<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).AddRange(IEnumerable(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).AddRange(System.Collections.Generic.IEnumerable(Of Inetlab.SMPP.Common.TLV))
  name.vb: AddRange(IEnumerable(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<TLV>.AddRange
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of TLV).AddRange
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.AsReadOnly
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.AsReadOnly
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: List<TLV>.AsReadOnly()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.AsReadOnly()
  nameWithType.vb: List(Of TLV).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<TLV>.AsReadOnly
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of TLV).AsReadOnly
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(System.Int32,System.Int32,Inetlab.SMPP.Common.TLV,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(System.Int32,System.Int32,Inetlab.SMPP.Common.TLV,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Int32, Int32, TLV, IComparer<TLV>)
  nameWithType: List<TLV>.BinarySearch(Int32, Int32, TLV, IComparer<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.BinarySearch(System.Int32, System.Int32, Inetlab.SMPP.Common.TLV, System.Collections.Generic.IComparer<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).BinarySearch(Int32, Int32, TLV, IComparer(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).BinarySearch(System.Int32, System.Int32, Inetlab.SMPP.Common.TLV, System.Collections.Generic.IComparer(Of Inetlab.SMPP.Common.TLV))
  name.vb: BinarySearch(Int32, Int32, TLV, IComparer(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<TLV>.BinarySearch
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of TLV).BinarySearch
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(Inetlab.SMPP.Common.TLV)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(Inetlab.SMPP.Common.TLV)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  name: BinarySearch(TLV)
  nameWithType: List<TLV>.BinarySearch(TLV)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.BinarySearch(Inetlab.SMPP.Common.TLV)
  nameWithType.vb: List(Of TLV).BinarySearch(TLV)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).BinarySearch(Inetlab.SMPP.Common.TLV)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<TLV>.BinarySearch
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of TLV).BinarySearch
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(Inetlab.SMPP.Common.TLV,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.BinarySearch(Inetlab.SMPP.Common.TLV,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(TLV, IComparer<TLV>)
  nameWithType: List<TLV>.BinarySearch(TLV, IComparer<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.BinarySearch(Inetlab.SMPP.Common.TLV, System.Collections.Generic.IComparer<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).BinarySearch(TLV, IComparer(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).BinarySearch(Inetlab.SMPP.Common.TLV, System.Collections.Generic.IComparer(Of Inetlab.SMPP.Common.TLV))
  name.vb: BinarySearch(TLV, IComparer(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<TLV>.BinarySearch
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of TLV).BinarySearch
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Clear
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Clear
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Clear
  name: Clear()
  nameWithType: List<TLV>.Clear()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Clear()
  nameWithType.vb: List(Of TLV).Clear()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<TLV>.Clear
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of TLV).Clear
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Contains(Inetlab.SMPP.Common.TLV)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Contains(Inetlab.SMPP.Common.TLV)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Contains(`0)
  name: Contains(TLV)
  nameWithType: List<TLV>.Contains(TLV)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Contains(Inetlab.SMPP.Common.TLV)
  nameWithType.vb: List(Of TLV).Contains(TLV)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Contains(Inetlab.SMPP.Common.TLV)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<TLV>.Contains
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of TLV).Contains
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: List<TLV>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of TLV).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<TLV>.IList.Contains
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of TLV).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ConvertAll``1(System.Converter{Inetlab.SMPP.Common.TLV,{TOutput}})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ConvertAll``1(System.Converter{Inetlab.SMPP.Common.TLV,``0})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<TLV, TOutput>)
  nameWithType: List<TLV>.ConvertAll<TOutput>(Converter<TLV, TOutput>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.ConvertAll<TOutput>(System.Converter<Inetlab.SMPP.Common.TLV, TOutput>)
  nameWithType.vb: List(Of TLV).ConvertAll(Of TOutput)(Converter(Of TLV, TOutput))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).ConvertAll(Of TOutput)(System.Converter(Of Inetlab.SMPP.Common.TLV, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of TLV, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<TLV>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of TLV).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(Inetlab.SMPP.Common.TLV[])
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(Inetlab.SMPP.Common.TLV[])
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  name: CopyTo(TLV[])
  nameWithType: List<TLV>.CopyTo(TLV[])
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.CopyTo(Inetlab.SMPP.Common.TLV[])
  nameWithType.vb: List(Of TLV).CopyTo(TLV())
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).CopyTo(Inetlab.SMPP.Common.TLV())
  name.vb: CopyTo(TLV())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<TLV>.CopyTo
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of TLV).CopyTo
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<TLV>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of TLV).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<TLV>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of TLV).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(System.Int32,Inetlab.SMPP.Common.TLV[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(System.Int32,Inetlab.SMPP.Common.TLV[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, TLV[], Int32, Int32)
  nameWithType: List<TLV>.CopyTo(Int32, TLV[], Int32, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.CopyTo(System.Int32, Inetlab.SMPP.Common.TLV[], System.Int32, System.Int32)
  nameWithType.vb: List(Of TLV).CopyTo(Int32, TLV(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).CopyTo(System.Int32, Inetlab.SMPP.Common.TLV(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, TLV(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<TLV>.CopyTo
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of TLV).CopyTo
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(Inetlab.SMPP.Common.TLV[],System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.CopyTo(Inetlab.SMPP.Common.TLV[],System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TLV[], Int32)
  nameWithType: List<TLV>.CopyTo(TLV[], Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.CopyTo(Inetlab.SMPP.Common.TLV[], System.Int32)
  nameWithType.vb: List(Of TLV).CopyTo(TLV(), Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).CopyTo(Inetlab.SMPP.Common.TLV(), System.Int32)
  name.vb: CopyTo(TLV(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<TLV>.CopyTo
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of TLV).CopyTo
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Exists(System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Exists(System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<TLV>)
  nameWithType: List<TLV>.Exists(Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Exists(System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).Exists(Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Exists(System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: Exists(Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<TLV>.Exists
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of TLV).Exists
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Find(System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Find(System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  name: Find(Predicate<TLV>)
  nameWithType: List<TLV>.Find(Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Find(System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).Find(Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Find(System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: Find(Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<TLV>.Find
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of TLV).Find
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<TLV>)
  nameWithType: List<TLV>.FindAll(Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindAll(System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).FindAll(Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindAll(System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: FindAll(Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<TLV>.FindAll
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of TLV).FindAll
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<TLV>)
  nameWithType: List<TLV>.FindIndex(Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindIndex(System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).FindIndex(Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindIndex(System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: FindIndex(Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<TLV>.FindIndex
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of TLV).FindIndex
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<TLV>)
  nameWithType: List<TLV>.FindIndex(Int32, Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindIndex(System.Int32, System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).FindIndex(Int32, Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindIndex(System.Int32, System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: FindIndex(Int32, Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<TLV>.FindIndex
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of TLV).FindIndex
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Int32,System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindIndex(System.Int32,System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<TLV>)
  nameWithType: List<TLV>.FindIndex(Int32, Int32, Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindIndex(System.Int32, System.Int32, System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).FindIndex(Int32, Int32, Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindIndex(System.Int32, System.Int32, System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: FindIndex(Int32, Int32, Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<TLV>.FindIndex
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of TLV).FindIndex
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLast(System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLast(System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<TLV>)
  nameWithType: List<TLV>.FindLast(Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindLast(System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).FindLast(Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindLast(System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: FindLast(Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<TLV>.FindLast
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of TLV).FindLast
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<TLV>)
  nameWithType: List<TLV>.FindLastIndex(Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindLastIndex(System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).FindLastIndex(Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindLastIndex(System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: FindLastIndex(Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<TLV>.FindLastIndex
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of TLV).FindLastIndex
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<TLV>)
  nameWithType: List<TLV>.FindLastIndex(Int32, Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindLastIndex(System.Int32, System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).FindLastIndex(Int32, Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindLastIndex(System.Int32, System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: FindLastIndex(Int32, Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<TLV>.FindLastIndex
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of TLV).FindLastIndex
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Int32,System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.FindLastIndex(System.Int32,System.Int32,System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<TLV>)
  nameWithType: List<TLV>.FindLastIndex(Int32, Int32, Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindLastIndex(System.Int32, System.Int32, System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).FindLastIndex(Int32, Int32, Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<TLV>.FindLastIndex
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of TLV).FindLastIndex
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ForEach(System.Action{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ForEach(System.Action{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  name: ForEach(Action<TLV>)
  nameWithType: List<TLV>.ForEach(Action<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.ForEach(System.Action<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).ForEach(Action(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).ForEach(System.Action(Of Inetlab.SMPP.Common.TLV))
  name.vb: ForEach(Action(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<TLV>.ForEach
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of TLV).ForEach
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.GetEnumerator
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.GetEnumerator
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: List<TLV>.GetEnumerator()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.GetEnumerator()
  nameWithType.vb: List(Of TLV).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<TLV>.GetEnumerator
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of TLV).GetEnumerator
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<TLV>.GetEnumerator()
  nameWithType: List<TLV>.IEnumerable<TLV>.GetEnumerator()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.Generic.IEnumerable<Inetlab.SMPP.Common.TLV>.GetEnumerator()
  nameWithType.vb: List(Of TLV).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<TLV>.GetEnumerator
    nameWithType: List<TLV>.IEnumerable<TLV>.GetEnumerator
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.Generic.IEnumerable<Inetlab.SMPP.Common.TLV>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of TLV).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: List<TLV>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of TLV).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<TLV>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of TLV).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  name: GetRange(Int32, Int32)
  nameWithType: List<TLV>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of TLV).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<TLV>.GetRange
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of TLV).GetRange
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  name: IndexOf(TLV)
  nameWithType: List<TLV>.IndexOf(TLV)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.IndexOf(Inetlab.SMPP.Common.TLV)
  nameWithType.vb: List(Of TLV).IndexOf(TLV)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).IndexOf(Inetlab.SMPP.Common.TLV)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<TLV>.IndexOf
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of TLV).IndexOf
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: List<TLV>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of TLV).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<TLV>.IList.IndexOf
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of TLV).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  name: IndexOf(TLV, Int32)
  nameWithType: List<TLV>.IndexOf(TLV, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.IndexOf(Inetlab.SMPP.Common.TLV, System.Int32)
  nameWithType.vb: List(Of TLV).IndexOf(TLV, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).IndexOf(Inetlab.SMPP.Common.TLV, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<TLV>.IndexOf
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of TLV).IndexOf
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.IndexOf(Inetlab.SMPP.Common.TLV,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(TLV, Int32, Int32)
  nameWithType: List<TLV>.IndexOf(TLV, Int32, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.IndexOf(Inetlab.SMPP.Common.TLV, System.Int32, System.Int32)
  nameWithType.vb: List(Of TLV).IndexOf(TLV, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).IndexOf(Inetlab.SMPP.Common.TLV, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<TLV>.IndexOf
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of TLV).IndexOf
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Insert(System.Int32,Inetlab.SMPP.Common.TLV)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Insert(System.Int32,Inetlab.SMPP.Common.TLV)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  name: Insert(Int32, TLV)
  nameWithType: List<TLV>.Insert(Int32, TLV)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Insert(System.Int32, Inetlab.SMPP.Common.TLV)
  nameWithType.vb: List(Of TLV).Insert(Int32, TLV)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Insert(System.Int32, Inetlab.SMPP.Common.TLV)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<TLV>.Insert
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of TLV).Insert
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: List<TLV>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of TLV).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<TLV>.IList.Insert
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of TLV).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<TLV>)
  nameWithType: List<TLV>.InsertRange(Int32, IEnumerable<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).InsertRange(Int32, IEnumerable(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of Inetlab.SMPP.Common.TLV))
  name.vb: InsertRange(Int32, IEnumerable(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<TLV>.InsertRange
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of TLV).InsertRange
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  name: LastIndexOf(TLV)
  nameWithType: List<TLV>.LastIndexOf(TLV)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.LastIndexOf(Inetlab.SMPP.Common.TLV)
  nameWithType.vb: List(Of TLV).LastIndexOf(TLV)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).LastIndexOf(Inetlab.SMPP.Common.TLV)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<TLV>.LastIndexOf
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of TLV).LastIndexOf
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(TLV, Int32)
  nameWithType: List<TLV>.LastIndexOf(TLV, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.LastIndexOf(Inetlab.SMPP.Common.TLV, System.Int32)
  nameWithType.vb: List(Of TLV).LastIndexOf(TLV, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).LastIndexOf(Inetlab.SMPP.Common.TLV, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<TLV>.LastIndexOf
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of TLV).LastIndexOf
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.LastIndexOf(Inetlab.SMPP.Common.TLV,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(TLV, Int32, Int32)
  nameWithType: List<TLV>.LastIndexOf(TLV, Int32, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.LastIndexOf(Inetlab.SMPP.Common.TLV, System.Int32, System.Int32)
  nameWithType.vb: List(Of TLV).LastIndexOf(TLV, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).LastIndexOf(Inetlab.SMPP.Common.TLV, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<TLV>.LastIndexOf
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of TLV).LastIndexOf
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Remove(Inetlab.SMPP.Common.TLV)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Remove(Inetlab.SMPP.Common.TLV)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Remove(`0)
  name: Remove(TLV)
  nameWithType: List<TLV>.Remove(TLV)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Remove(Inetlab.SMPP.Common.TLV)
  nameWithType.vb: List(Of TLV).Remove(TLV)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Remove(Inetlab.SMPP.Common.TLV)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<TLV>.Remove
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of TLV).Remove
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: List<TLV>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of TLV).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<TLV>.IList.Remove
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of TLV).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<TLV>)
  nameWithType: List<TLV>.RemoveAll(Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.RemoveAll(System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).RemoveAll(Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).RemoveAll(System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: RemoveAll(Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<TLV>.RemoveAll
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of TLV).RemoveAll
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: List<TLV>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of TLV).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<TLV>.RemoveAt
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of TLV).RemoveAt
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  nameWithType: List<TLV>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of TLV).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<TLV>.RemoveRange
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of TLV).RemoveRange
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Reverse
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Reverse
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Reverse
  name: Reverse()
  nameWithType: List<TLV>.Reverse()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Reverse()
  nameWithType.vb: List(Of TLV).Reverse()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<TLV>.Reverse
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of TLV).Reverse
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  name: Reverse(Int32, Int32)
  nameWithType: List<TLV>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of TLV).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<TLV>.Reverse
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of TLV).Reverse
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Sort
  name: Sort()
  nameWithType: List<TLV>.Sort()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Sort()
  nameWithType.vb: List(Of TLV).Sort()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<TLV>.Sort
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of TLV).Sort
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<TLV>)
  nameWithType: List<TLV>.Sort(IComparer<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Sort(System.Collections.Generic.IComparer<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).Sort(IComparer(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Sort(System.Collections.Generic.IComparer(Of Inetlab.SMPP.Common.TLV))
  name.vb: Sort(IComparer(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<TLV>.Sort
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of TLV).Sort
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  name: Sort(Int32, Int32, IComparer<TLV>)
  nameWithType: List<TLV>.Sort(Int32, Int32, IComparer<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).Sort(Int32, Int32, IComparer(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of Inetlab.SMPP.Common.TLV))
  name.vb: Sort(Int32, Int32, IComparer(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<TLV>.Sort
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of TLV).Sort
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Comparison{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Sort(System.Comparison{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  name: Sort(Comparison<TLV>)
  nameWithType: List<TLV>.Sort(Comparison<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Sort(System.Comparison<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).Sort(Comparison(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Sort(System.Comparison(Of Inetlab.SMPP.Common.TLV))
  name.vb: Sort(Comparison(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<TLV>.Sort
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of TLV).Sort
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ToArray
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.ToArray
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.ToArray
  name: ToArray()
  nameWithType: List<TLV>.ToArray()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.ToArray()
  nameWithType.vb: List(Of TLV).ToArray()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<TLV>.ToArray
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of TLV).ToArray
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.TrimExcess
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.TrimExcess
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.TrimExcess
  name: TrimExcess()
  nameWithType: List<TLV>.TrimExcess()
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.TrimExcess()
  nameWithType.vb: List(Of TLV).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<TLV>.TrimExcess
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of TLV).TrimExcess
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.TrueForAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  commentId: M:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.TrueForAll(System.Predicate{Inetlab.SMPP.Common.TLV})
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<TLV>)
  nameWithType: List<TLV>.TrueForAll(Predicate<TLV>)
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.TrueForAll(System.Predicate<Inetlab.SMPP.Common.TLV>)
  nameWithType.vb: List(Of TLV).TrueForAll(Predicate(Of TLV))
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).TrueForAll(System.Predicate(Of Inetlab.SMPP.Common.TLV))
  name.vb: TrueForAll(Predicate(Of TLV))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<TLV>.TrueForAll
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of TLV).TrueForAll
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.Common.TLV
    name: TLV
    nameWithType: TLV
    fullName: Inetlab.SMPP.Common.TLV
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Capacity
  commentId: P:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Capacity
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Capacity
  name: Capacity
  nameWithType: List<TLV>.Capacity
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Capacity
  nameWithType.vb: List(Of TLV).Capacity
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Capacity
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Count
  commentId: P:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.Count
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.Count
  name: Count
  nameWithType: List<TLV>.Count
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.Count
  nameWithType.vb: List(Of TLV).Count
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).Count
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IsFixedSize
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: List<TLV>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of TLV).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<TLV>.IsReadOnly
  nameWithType: List<TLV>.ICollection<TLV>.IsReadOnly
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.Generic.ICollection<Inetlab.SMPP.Common.TLV>.IsReadOnly
  nameWithType.vb: List(Of TLV).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#IsReadOnly
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: List<TLV>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of TLV).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: List<TLV>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of TLV).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: List<TLV>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of TLV).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Generic.List{Inetlab.SMPP.Common.TLV}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: List<TLV>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of TLV).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<TLV>.IList.Item
    fullName: System.Collections.Generic.List<Inetlab.SMPP.Common.TLV>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of TLV).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of Inetlab.SMPP.Common.TLV).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: List<T>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<T>.IList.get_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: List<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<T>.IList.set_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: List<T>.IList.Add(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<T>.IList.Add
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of T).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<T>.AddRange
    fullName: System.Collections.Generic.List<T>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of T).AddRange
    fullName: System.Collections.Generic.List(Of T).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<T>.AsReadOnly
    fullName: System.Collections.Generic.List<T>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of T).AsReadOnly
    fullName: System.Collections.Generic.List(Of T).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(Int32, Int32, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Int32, Int32, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Int32, Int32, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<T>.Clear
    fullName: System.Collections.Generic.List<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of T).Clear
    fullName: System.Collections.Generic.List(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<T>.Contains
    fullName: System.Collections.Generic.List<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of T).Contains
    fullName: System.Collections.Generic.List(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: List<T>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<T>.IList.Contains
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of T).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<T>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of T).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  name: CopyTo(Int32, T[], Int32, Int32)
  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  nameWithType.vb: List(Of T).CopyTo(Int32, T(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: List<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: List(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<T>.Exists
    fullName: System.Collections.Generic.List<T>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of T).Exists
    fullName: System.Collections.Generic.List(Of T).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<T>.Find
    fullName: System.Collections.Generic.List<T>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of T).Find
    fullName: System.Collections.Generic.List(Of T).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<T>.FindAll
    fullName: System.Collections.Generic.List<T>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of T).FindAll
    fullName: System.Collections.Generic.List(Of T).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<T>.FindLast
    fullName: System.Collections.Generic.List<T>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of T).FindLast
    fullName: System.Collections.Generic.List(Of T).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<T>.ForEach
    fullName: System.Collections.Generic.List<T>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of T).ForEach
    fullName: System.Collections.Generic.List(Of T).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of T).GetEnumerator
    fullName: System.Collections.Generic.List(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: List<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: List<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  name: GetRange(Int32, Int32)
  nameWithType: List<T>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<T>.GetRange
    fullName: System.Collections.Generic.List<T>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of T).GetRange
    fullName: System.Collections.Generic.List(Of T).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: List<T>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<T>.IList.IndexOf
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32)
  nameWithType: List<T>.IndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32, Int32)
  nameWithType: List<T>.IndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: List<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.List<T>.Insert(System.Int32, T)
  nameWithType.vb: List(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<T>.Insert
    fullName: System.Collections.Generic.List<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of T).Insert
    fullName: System.Collections.Generic.List(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: List<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<T>.IList.Insert
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of T).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: InsertRange(Int32, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Int32, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<T>.InsertRange
    fullName: System.Collections.Generic.List<T>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of T).InsertRange
    fullName: System.Collections.Generic.List(Of T).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<T>.Remove
    fullName: System.Collections.Generic.List<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of T).Remove
    fullName: System.Collections.Generic.List(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: List<T>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<T>.IList.Remove
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of T).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<T>.RemoveAll
    fullName: System.Collections.Generic.List<T>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of T).RemoveAll
    fullName: System.Collections.Generic.List(Of T).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: List<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<T>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<T>.RemoveAt
    fullName: System.Collections.Generic.List<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of T).RemoveAt
    fullName: System.Collections.Generic.List(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  name: RemoveRange(Int32, Int32)
  nameWithType: List<T>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<T>.RemoveRange
    fullName: System.Collections.Generic.List<T>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of T).RemoveRange
    fullName: System.Collections.Generic.List(Of T).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  name: Reverse(Int32, Int32)
  nameWithType: List<T>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(Int32, Int32, IComparer<T>)
  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Int32, Int32, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Int32, Int32, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<T>.ToArray
    fullName: System.Collections.Generic.List<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of T).ToArray
    fullName: System.Collections.Generic.List(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<T>.TrimExcess
    fullName: System.Collections.Generic.List<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of T).TrimExcess
    fullName: System.Collections.Generic.List(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<T>.TrueForAll
    fullName: System.Collections.Generic.List<T>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of T).TrueForAll
    fullName: System.Collections.Generic.List(Of T).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: List<T>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: List<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: List<T>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: List<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: List<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: List<T>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<T>.IList.Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of T).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Inetlab.SMPP.Common.TLVCollection.#ctor*
  commentId: Overload:Inetlab.SMPP.Common.TLVCollection.#ctor
  isExternal: false
  name: TLVCollection
  nameWithType: TLVCollection.TLVCollection
  fullName: Inetlab.SMPP.Common.TLVCollection.TLVCollection
- uid: Inetlab.SMPP.Common.SmppClientBase
  commentId: T:Inetlab.SMPP.Common.SmppClientBase
  parent: Inetlab.SMPP.Common
  isExternal: false
  name: SmppClientBase
  nameWithType: SmppClientBase
  fullName: Inetlab.SMPP.Common.SmppClientBase
- uid: Inetlab.SMPP.Common.EncodingMapper
  commentId: T:Inetlab.SMPP.Common.EncodingMapper
  parent: Inetlab.SMPP.Common
  isExternal: false
  name: EncodingMapper
  nameWithType: EncodingMapper
  fullName: Inetlab.SMPP.Common.EncodingMapper
- uid: Inetlab.SMPP.Common.TLVCollection.Item*
  commentId: Overload:Inetlab.SMPP.Common.TLVCollection.Item
  isExternal: false
  name: Item
  nameWithType: TLVCollection.Item
  fullName: Inetlab.SMPP.Common.TLVCollection.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Inetlab.SMPP.Common.TLV
  commentId: T:Inetlab.SMPP.Common.TLV
  parent: Inetlab.SMPP.Common
  isExternal: false
  name: TLV
  nameWithType: TLV
  fullName: Inetlab.SMPP.Common.TLV
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Inetlab.SMPP.Common.OptionalTags
  commentId: T:Inetlab.SMPP.Common.OptionalTags
  parent: Inetlab.SMPP.Common
  isExternal: false
  name: OptionalTags
  nameWithType: OptionalTags
  fullName: Inetlab.SMPP.Common.OptionalTags
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Inetlab.SMPP.Common.TLVCollection.Add*
  commentId: Overload:Inetlab.SMPP.Common.TLVCollection.Add
  isExternal: false
  name: Add
  nameWithType: TLVCollection.Add
  fullName: Inetlab.SMPP.Common.TLVCollection.Add
- uid: Inetlab.SMPP.Common.TLVCollection.AddSARReferenceNumber*
  commentId: Overload:Inetlab.SMPP.Common.TLVCollection.AddSARReferenceNumber
  isExternal: false
  name: AddSARReferenceNumber
  nameWithType: TLVCollection.AddSARReferenceNumber
  fullName: Inetlab.SMPP.Common.TLVCollection.AddSARReferenceNumber
- uid: Inetlab.SMPP.Common.TLVCollection.AddSARSequenceNumber*
  commentId: Overload:Inetlab.SMPP.Common.TLVCollection.AddSARSequenceNumber
  isExternal: false
  name: AddSARSequenceNumber
  nameWithType: TLVCollection.AddSARSequenceNumber
  fullName: Inetlab.SMPP.Common.TLVCollection.AddSARSequenceNumber
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Inetlab.SMPP.Common.TLVCollection.AddSARTotalSegments*
  commentId: Overload:Inetlab.SMPP.Common.TLVCollection.AddSARTotalSegments
  isExternal: false
  name: AddSARTotalSegments
  nameWithType: TLVCollection.AddSARTotalSegments
  fullName: Inetlab.SMPP.Common.TLVCollection.AddSARTotalSegments
- uid: Inetlab.SMPP.Common.TLVCollection.AddMoreMessagesToSend*
  commentId: Overload:Inetlab.SMPP.Common.TLVCollection.AddMoreMessagesToSend
  isExternal: false
  name: AddMoreMessagesToSend
  nameWithType: TLVCollection.AddMoreMessagesToSend
  fullName: Inetlab.SMPP.Common.TLVCollection.AddMoreMessagesToSend
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Inetlab.SMPP.Common.TLVCollection.AddMessagePayload*
  commentId: Overload:Inetlab.SMPP.Common.TLVCollection.AddMessagePayload
  isExternal: false
  name: AddMessagePayload
  nameWithType: TLVCollection.AddMessagePayload
  fullName: Inetlab.SMPP.Common.TLVCollection.AddMessagePayload
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Inetlab.SMPP.Common.DataCodings
  commentId: T:Inetlab.SMPP.Common.DataCodings
  parent: Inetlab.SMPP.Common
  isExternal: false
  name: DataCodings
  nameWithType: DataCodings
  fullName: Inetlab.SMPP.Common.DataCodings
