### YamlMime:ManagedReference
items:
- uid: Inetlab.SMPP.PDU.Bind
  commentId: T:Inetlab.SMPP.PDU.Bind
  id: Bind
  parent: Inetlab.SMPP.PDU
  children:
  - Inetlab.SMPP.PDU.Bind.#ctor
  - Inetlab.SMPP.PDU.Bind.AddressRange
  - Inetlab.SMPP.PDU.Bind.AddrNpi
  - Inetlab.SMPP.PDU.Bind.AddrTon
  - Inetlab.SMPP.PDU.Bind.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  - Inetlab.SMPP.PDU.Bind.InterfaceVersion
  - Inetlab.SMPP.PDU.Bind.Password
  - Inetlab.SMPP.PDU.Bind.SystemId
  - Inetlab.SMPP.PDU.Bind.SystemType
  langs:
  - csharp
  - vb
  name: Bind
  nameWithType: Bind
  fullName: Inetlab.SMPP.PDU.Bind
  type: Class
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Bind
    path: ../Source/CS/PDU/Bind.cs
    startLine: 11
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  summary: "\nRegister an instance of an ESME with the SMSC system \nand request an SMPP session over this network connection \nfor the submission or delivery of messages\n"
  example: []
  syntax:
    content: 'public class Bind : SmppRequest<BindResp>'
    content.vb: >-
      Public Class Bind
          Inherits SmppRequest(Of BindResp)
  inheritance:
  - System.Object
  - Inetlab.SMPP.PDU.SmppPDU
  - Inetlab.SMPP.PDU.SmppRequest
  - Inetlab.SMPP.PDU.SmppRequest{Inetlab.SMPP.PDU.BindResp}
  inheritedMembers:
  - Inetlab.SMPP.PDU.SmppRequest{Inetlab.SMPP.PDU.BindResp}.Response
  - Inetlab.SMPP.PDU.SmppPDU.Length
  - Inetlab.SMPP.PDU.SmppPDU.Command
  - Inetlab.SMPP.PDU.SmppPDU.Status
  - Inetlab.SMPP.PDU.SmppPDU.Sequence
  - Inetlab.SMPP.PDU.SmppPDU.Client
  - Inetlab.SMPP.PDU.SmppPDU.Tag
  - Inetlab.SMPP.PDU.SmppPDU.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Inetlab.SMPP.PDU.Bind.#ctor
  commentId: M:Inetlab.SMPP.PDU.Bind.#ctor
  id: '#ctor'
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: Bind()
  nameWithType: Bind.Bind()
  fullName: Inetlab.SMPP.PDU.Bind.Bind()
  type: Constructor
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: .ctor
    path: ../Source/CS/PDU/Bind.cs
    startLine: 15
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  syntax:
    content: public Bind()
    content.vb: Public Sub New
  overload: Inetlab.SMPP.PDU.Bind.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.PDU.Bind.InterfaceVersion
  commentId: P:Inetlab.SMPP.PDU.Bind.InterfaceVersion
  id: InterfaceVersion
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: InterfaceVersion
  nameWithType: Bind.InterfaceVersion
  fullName: Inetlab.SMPP.PDU.Bind.InterfaceVersion
  type: Property
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: InterfaceVersion
    path: ../Source/CS/PDU/Bind.cs
    startLine: 24
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  summary: "\nIndicates the version of the SMPP protocol supported by the ESME.\n"
  example: []
  syntax:
    content: public byte InterfaceVersion { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Property InterfaceVersion As Byte
  overload: Inetlab.SMPP.PDU.Bind.InterfaceVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.PDU.Bind.SystemId
  commentId: P:Inetlab.SMPP.PDU.Bind.SystemId
  id: SystemId
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: SystemId
  nameWithType: Bind.SystemId
  fullName: Inetlab.SMPP.PDU.Bind.SystemId
  type: Property
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: SystemId
    path: ../Source/CS/PDU/Bind.cs
    startLine: 29
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  summary: "\nIdentifies the ESME system requesting to bind as a transmitter with the MC.\n"
  example: []
  syntax:
    content: public string SystemId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemId As String
  overload: Inetlab.SMPP.PDU.Bind.SystemId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.PDU.Bind.Password
  commentId: P:Inetlab.SMPP.PDU.Bind.Password
  id: Password
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: Bind.Password
  fullName: Inetlab.SMPP.PDU.Bind.Password
  type: Property
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: Password
    path: ../Source/CS/PDU/Bind.cs
    startLine: 34
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  summary: "\nThe password may be used by the MC to authenticate the ESME requesting to bind.\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Inetlab.SMPP.PDU.Bind.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.PDU.Bind.SystemType
  commentId: P:Inetlab.SMPP.PDU.Bind.SystemType
  id: SystemType
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: SystemType
  nameWithType: Bind.SystemType
  fullName: Inetlab.SMPP.PDU.Bind.SystemType
  type: Property
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: SystemType
    path: ../Source/CS/PDU/Bind.cs
    startLine: 39
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  summary: "\nIdentifies the type of ESME system requesting to bind as a transmitter with the MC.\n"
  example: []
  syntax:
    content: public string SystemType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemType As String
  overload: Inetlab.SMPP.PDU.Bind.SystemType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.PDU.Bind.AddrTon
  commentId: P:Inetlab.SMPP.PDU.Bind.AddrTon
  id: AddrTon
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: AddrTon
  nameWithType: Bind.AddrTon
  fullName: Inetlab.SMPP.PDU.Bind.AddrTon
  type: Property
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: AddrTon
    path: ../Source/CS/PDU/Bind.cs
    startLine: 44
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  summary: "\nIndicates Type of Number of the ESME address. If not known set to 0.\n"
  example: []
  syntax:
    content: public byte AddrTon { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Property AddrTon As Byte
  overload: Inetlab.SMPP.PDU.Bind.AddrTon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.PDU.Bind.AddrNpi
  commentId: P:Inetlab.SMPP.PDU.Bind.AddrNpi
  id: AddrNpi
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: AddrNpi
  nameWithType: Bind.AddrNpi
  fullName: Inetlab.SMPP.PDU.Bind.AddrNpi
  type: Property
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: AddrNpi
    path: ../Source/CS/PDU/Bind.cs
    startLine: 49
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  summary: "\nNumbering Plan Indicator for ESME address. If not known set to 0.\n"
  example: []
  syntax:
    content: public byte AddrNpi { get; set; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public Property AddrNpi As Byte
  overload: Inetlab.SMPP.PDU.Bind.AddrNpi*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.PDU.Bind.AddressRange
  commentId: P:Inetlab.SMPP.PDU.Bind.AddressRange
  id: AddressRange
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: AddressRange
  nameWithType: Bind.AddressRange
  fullName: Inetlab.SMPP.PDU.Bind.AddressRange
  type: Property
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: AddressRange
    path: ../Source/CS/PDU/Bind.cs
    startLine: 55
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  summary: "\nIdentifies a set of SME addresses. \nRegular Expression notation should be used to specify a range of addresses.\n"
  example: []
  syntax:
    content: public string AddressRange { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AddressRange As String
  overload: Inetlab.SMPP.PDU.Bind.AddressRange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.PDU.Bind.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  commentId: M:Inetlab.SMPP.PDU.Bind.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  id: CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  parent: Inetlab.SMPP.PDU.Bind
  langs:
  - csharp
  - vb
  name: CorrespondTo(SmppResponse)
  nameWithType: Bind.CorrespondTo(SmppResponse)
  fullName: Inetlab.SMPP.PDU.Bind.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  type: Method
  source:
    remote:
      path: Source/CS/PDU/Bind.cs
      branch: master
      repo: C:/Users/Aleksey/Dropbox/Repos/Inetlab.SMPP.git
    id: CorrespondTo
    path: ../Source/CS/PDU/Bind.cs
    startLine: 128
  assemblies:
  - Inetlab.SMPP
  namespace: Inetlab.SMPP.PDU
  syntax:
    content: public override bool CorrespondTo(SmppResponse response)
    parameters:
    - id: response
      type: Inetlab.SMPP.PDU.SmppResponse
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CorrespondTo(response As SmppResponse) As Boolean
  overridden: Inetlab.SMPP.PDU.SmppRequest.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  overload: Inetlab.SMPP.PDU.Bind.CorrespondTo*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Inetlab.SMPP.PDU
  commentId: N:Inetlab.SMPP.PDU
  isExternal: false
  name: Inetlab.SMPP.PDU
  nameWithType: Inetlab.SMPP.PDU
  fullName: Inetlab.SMPP.PDU
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Inetlab.SMPP.PDU.SmppPDU
  commentId: T:Inetlab.SMPP.PDU.SmppPDU
  parent: Inetlab.SMPP.PDU
  isExternal: false
  name: SmppPDU
  nameWithType: SmppPDU
  fullName: Inetlab.SMPP.PDU.SmppPDU
- uid: Inetlab.SMPP.PDU.SmppRequest
  commentId: T:Inetlab.SMPP.PDU.SmppRequest
  parent: Inetlab.SMPP.PDU
  isExternal: false
  name: SmppRequest
  nameWithType: SmppRequest
  fullName: Inetlab.SMPP.PDU.SmppRequest
- uid: Inetlab.SMPP.PDU.SmppRequest{Inetlab.SMPP.PDU.BindResp}
  commentId: T:Inetlab.SMPP.PDU.SmppRequest{Inetlab.SMPP.PDU.BindResp}
  parent: Inetlab.SMPP.PDU
  definition: Inetlab.SMPP.PDU.SmppRequest`1
  name: SmppRequest<BindResp>
  nameWithType: SmppRequest<BindResp>
  fullName: Inetlab.SMPP.PDU.SmppRequest<Inetlab.SMPP.PDU.BindResp>
  nameWithType.vb: SmppRequest(Of BindResp)
  fullName.vb: Inetlab.SMPP.PDU.SmppRequest(Of Inetlab.SMPP.PDU.BindResp)
  name.vb: SmppRequest(Of BindResp)
  spec.csharp:
  - uid: Inetlab.SMPP.PDU.SmppRequest`1
    name: SmppRequest
    nameWithType: SmppRequest
    fullName: Inetlab.SMPP.PDU.SmppRequest
  - name: <
    nameWithType: <
    fullName: <
  - uid: Inetlab.SMPP.PDU.BindResp
    name: BindResp
    nameWithType: BindResp
    fullName: Inetlab.SMPP.PDU.BindResp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Inetlab.SMPP.PDU.SmppRequest`1
    name: SmppRequest
    nameWithType: SmppRequest
    fullName: Inetlab.SMPP.PDU.SmppRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Inetlab.SMPP.PDU.BindResp
    name: BindResp
    nameWithType: BindResp
    fullName: Inetlab.SMPP.PDU.BindResp
  - name: )
    nameWithType: )
    fullName: )
- uid: Inetlab.SMPP.PDU.SmppRequest{Inetlab.SMPP.PDU.BindResp}.Response
  commentId: P:Inetlab.SMPP.PDU.SmppRequest{Inetlab.SMPP.PDU.BindResp}.Response
  parent: Inetlab.SMPP.PDU.SmppRequest{Inetlab.SMPP.PDU.BindResp}
  definition: Inetlab.SMPP.PDU.SmppRequest`1.Response
  name: Response
  nameWithType: SmppRequest<BindResp>.Response
  fullName: Inetlab.SMPP.PDU.SmppRequest<Inetlab.SMPP.PDU.BindResp>.Response
  nameWithType.vb: SmppRequest(Of BindResp).Response
  fullName.vb: Inetlab.SMPP.PDU.SmppRequest(Of Inetlab.SMPP.PDU.BindResp).Response
- uid: Inetlab.SMPP.PDU.SmppPDU.Length
  commentId: P:Inetlab.SMPP.PDU.SmppPDU.Length
  parent: Inetlab.SMPP.PDU.SmppPDU
  isExternal: false
  name: Length
  nameWithType: SmppPDU.Length
  fullName: Inetlab.SMPP.PDU.SmppPDU.Length
- uid: Inetlab.SMPP.PDU.SmppPDU.Command
  commentId: P:Inetlab.SMPP.PDU.SmppPDU.Command
  parent: Inetlab.SMPP.PDU.SmppPDU
  isExternal: false
  name: Command
  nameWithType: SmppPDU.Command
  fullName: Inetlab.SMPP.PDU.SmppPDU.Command
- uid: Inetlab.SMPP.PDU.SmppPDU.Status
  commentId: P:Inetlab.SMPP.PDU.SmppPDU.Status
  parent: Inetlab.SMPP.PDU.SmppPDU
  isExternal: false
  name: Status
  nameWithType: SmppPDU.Status
  fullName: Inetlab.SMPP.PDU.SmppPDU.Status
- uid: Inetlab.SMPP.PDU.SmppPDU.Sequence
  commentId: P:Inetlab.SMPP.PDU.SmppPDU.Sequence
  parent: Inetlab.SMPP.PDU.SmppPDU
  isExternal: false
  name: Sequence
  nameWithType: SmppPDU.Sequence
  fullName: Inetlab.SMPP.PDU.SmppPDU.Sequence
- uid: Inetlab.SMPP.PDU.SmppPDU.Client
  commentId: P:Inetlab.SMPP.PDU.SmppPDU.Client
  parent: Inetlab.SMPP.PDU.SmppPDU
  isExternal: false
  name: Client
  nameWithType: SmppPDU.Client
  fullName: Inetlab.SMPP.PDU.SmppPDU.Client
- uid: Inetlab.SMPP.PDU.SmppPDU.Tag
  commentId: P:Inetlab.SMPP.PDU.SmppPDU.Tag
  parent: Inetlab.SMPP.PDU.SmppPDU
  isExternal: false
  name: Tag
  nameWithType: SmppPDU.Tag
  fullName: Inetlab.SMPP.PDU.SmppPDU.Tag
- uid: Inetlab.SMPP.PDU.SmppPDU.ToString
  commentId: M:Inetlab.SMPP.PDU.SmppPDU.ToString
  parent: Inetlab.SMPP.PDU.SmppPDU
  isExternal: false
  name: ToString()
  nameWithType: SmppPDU.ToString()
  fullName: Inetlab.SMPP.PDU.SmppPDU.ToString()
  spec.csharp:
  - uid: Inetlab.SMPP.PDU.SmppPDU.ToString
    name: ToString
    nameWithType: SmppPDU.ToString
    fullName: Inetlab.SMPP.PDU.SmppPDU.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Inetlab.SMPP.PDU.SmppPDU.ToString
    name: ToString
    nameWithType: SmppPDU.ToString
    fullName: Inetlab.SMPP.PDU.SmppPDU.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Inetlab.SMPP.PDU.SmppRequest`1
  commentId: T:Inetlab.SMPP.PDU.SmppRequest`1
  isExternal: false
  name: SmppRequest<TResponse>
  nameWithType: SmppRequest<TResponse>
  fullName: Inetlab.SMPP.PDU.SmppRequest<TResponse>
  nameWithType.vb: SmppRequest(Of TResponse)
  fullName.vb: Inetlab.SMPP.PDU.SmppRequest(Of TResponse)
  name.vb: SmppRequest(Of TResponse)
  spec.csharp:
  - uid: Inetlab.SMPP.PDU.SmppRequest`1
    name: SmppRequest
    nameWithType: SmppRequest
    fullName: Inetlab.SMPP.PDU.SmppRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Inetlab.SMPP.PDU.SmppRequest`1
    name: SmppRequest
    nameWithType: SmppRequest
    fullName: Inetlab.SMPP.PDU.SmppRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Inetlab.SMPP.PDU.SmppRequest`1.Response
  commentId: P:Inetlab.SMPP.PDU.SmppRequest`1.Response
  isExternal: false
  name: Response
  nameWithType: SmppRequest<TResponse>.Response
  fullName: Inetlab.SMPP.PDU.SmppRequest<TResponse>.Response
  nameWithType.vb: SmppRequest(Of TResponse).Response
  fullName.vb: Inetlab.SMPP.PDU.SmppRequest(Of TResponse).Response
- uid: Inetlab.SMPP.PDU.Bind.#ctor*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.#ctor
  isExternal: false
  name: Bind
  nameWithType: Bind.Bind
  fullName: Inetlab.SMPP.PDU.Bind.Bind
- uid: Inetlab.SMPP.PDU.Bind.InterfaceVersion*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.InterfaceVersion
  isExternal: false
  name: InterfaceVersion
  nameWithType: Bind.InterfaceVersion
  fullName: Inetlab.SMPP.PDU.Bind.InterfaceVersion
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Inetlab.SMPP.PDU.Bind.SystemId*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.SystemId
  isExternal: false
  name: SystemId
  nameWithType: Bind.SystemId
  fullName: Inetlab.SMPP.PDU.Bind.SystemId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Inetlab.SMPP.PDU.Bind.Password*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.Password
  isExternal: false
  name: Password
  nameWithType: Bind.Password
  fullName: Inetlab.SMPP.PDU.Bind.Password
- uid: Inetlab.SMPP.PDU.Bind.SystemType*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.SystemType
  isExternal: false
  name: SystemType
  nameWithType: Bind.SystemType
  fullName: Inetlab.SMPP.PDU.Bind.SystemType
- uid: Inetlab.SMPP.PDU.Bind.AddrTon*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.AddrTon
  isExternal: false
  name: AddrTon
  nameWithType: Bind.AddrTon
  fullName: Inetlab.SMPP.PDU.Bind.AddrTon
- uid: Inetlab.SMPP.PDU.Bind.AddrNpi*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.AddrNpi
  isExternal: false
  name: AddrNpi
  nameWithType: Bind.AddrNpi
  fullName: Inetlab.SMPP.PDU.Bind.AddrNpi
- uid: Inetlab.SMPP.PDU.Bind.AddressRange*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.AddressRange
  isExternal: false
  name: AddressRange
  nameWithType: Bind.AddressRange
  fullName: Inetlab.SMPP.PDU.Bind.AddressRange
- uid: Inetlab.SMPP.PDU.SmppRequest.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  commentId: M:Inetlab.SMPP.PDU.SmppRequest.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  parent: Inetlab.SMPP.PDU.SmppRequest
  isExternal: false
  name: CorrespondTo(SmppResponse)
  nameWithType: SmppRequest.CorrespondTo(SmppResponse)
  fullName: Inetlab.SMPP.PDU.SmppRequest.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
  spec.csharp:
  - uid: Inetlab.SMPP.PDU.SmppRequest.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
    name: CorrespondTo
    nameWithType: SmppRequest.CorrespondTo
    fullName: Inetlab.SMPP.PDU.SmppRequest.CorrespondTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.PDU.SmppResponse
    name: SmppResponse
    nameWithType: SmppResponse
    fullName: Inetlab.SMPP.PDU.SmppResponse
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Inetlab.SMPP.PDU.SmppRequest.CorrespondTo(Inetlab.SMPP.PDU.SmppResponse)
    name: CorrespondTo
    nameWithType: SmppRequest.CorrespondTo
    fullName: Inetlab.SMPP.PDU.SmppRequest.CorrespondTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Inetlab.SMPP.PDU.SmppResponse
    name: SmppResponse
    nameWithType: SmppResponse
    fullName: Inetlab.SMPP.PDU.SmppResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Inetlab.SMPP.PDU.Bind.CorrespondTo*
  commentId: Overload:Inetlab.SMPP.PDU.Bind.CorrespondTo
  isExternal: false
  name: CorrespondTo
  nameWithType: Bind.CorrespondTo
  fullName: Inetlab.SMPP.PDU.Bind.CorrespondTo
- uid: Inetlab.SMPP.PDU.SmppResponse
  commentId: T:Inetlab.SMPP.PDU.SmppResponse
  parent: Inetlab.SMPP.PDU
  isExternal: false
  name: SmppResponse
  nameWithType: SmppResponse
  fullName: Inetlab.SMPP.PDU.SmppResponse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
