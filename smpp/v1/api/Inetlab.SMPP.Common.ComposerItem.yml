### YamlMime:ManagedReference
items:
- uid: Inetlab.SMPP.Common.ComposerItem
  commentId: T:Inetlab.SMPP.Common.ComposerItem
  id: ComposerItem
  parent: Inetlab.SMPP.Common
  children:
  - Inetlab.SMPP.Common.ComposerItem.Dispose
  - Inetlab.SMPP.Common.ComposerItem.Finalize
  - Inetlab.SMPP.Common.ComposerItem.GetFullMessage
  - Inetlab.SMPP.Common.ComposerItem.HasAllParts
  - Inetlab.SMPP.Common.ComposerItem.Parts
  langs:
  - csharp
  - vb
  name: ComposerItem
  nameWithType: ComposerItem
  fullName: Inetlab.SMPP.Common.ComposerItem
  type: Class
  source:
    id: ComposerItem
    path: ''
    startLine: 5308
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  summary: 'Represents an item for <xref href="Inetlab.SMPP.Common.MessageComposer" data-throw-if-not-resolved="false"></xref> that collects received parts of the concatenation message. '
  example: []
  syntax:
    content: 'public class ComposerItem : IDisposable'
    content.vb: >-
      Public Class ComposerItem
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Inetlab.SMPP.Common.ComposerItem.Parts
  commentId: P:Inetlab.SMPP.Common.ComposerItem.Parts
  id: Parts
  parent: Inetlab.SMPP.Common.ComposerItem
  langs:
  - csharp
  - vb
  name: Parts
  nameWithType: ComposerItem.Parts
  fullName: Inetlab.SMPP.Common.ComposerItem.Parts
  type: Property
  source:
    id: Parts
    path: ''
    startLine: 5311
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public ISmppMessage[] Parts { get; }
    parameters: []
    return:
      type: Inetlab.SMPP.Common.ISmppMessage[]
    content.vb: Public ReadOnly Property Parts As ISmppMessage()
  overload: Inetlab.SMPP.Common.ComposerItem.Parts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Inetlab.SMPP.Common.ComposerItem.HasAllParts
  commentId: M:Inetlab.SMPP.Common.ComposerItem.HasAllParts
  id: HasAllParts
  parent: Inetlab.SMPP.Common.ComposerItem
  langs:
  - csharp
  - vb
  name: HasAllParts()
  nameWithType: ComposerItem.HasAllParts()
  fullName: Inetlab.SMPP.Common.ComposerItem.HasAllParts()
  type: Method
  source:
    id: HasAllParts
    path: ''
    startLine: 5332
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  summary: 'Check if concatenated message has all parts. '
  example: []
  syntax:
    content: public bool HasAllParts()
    return:
      type: System.Boolean
      description: 'True if all parts, false if not. '
    content.vb: Public Function HasAllParts As Boolean
  overload: Inetlab.SMPP.Common.ComposerItem.HasAllParts*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.ComposerItem.GetFullMessage
  commentId: M:Inetlab.SMPP.Common.ComposerItem.GetFullMessage
  id: GetFullMessage
  parent: Inetlab.SMPP.Common.ComposerItem
  langs:
  - csharp
  - vb
  name: GetFullMessage()
  nameWithType: ComposerItem.GetFullMessage()
  fullName: Inetlab.SMPP.Common.ComposerItem.GetFullMessage()
  type: Method
  source:
    id: GetFullMessage
    path: ''
    startLine: 5348
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  summary: Gets full text for concatenated message.
  example: []
  syntax:
    content: public string GetFullMessage()
    return:
      type: System.String
      description: 'The full message. '
    content.vb: Public Function GetFullMessage As String
  overload: Inetlab.SMPP.Common.ComposerItem.GetFullMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.ComposerItem.Dispose
  commentId: M:Inetlab.SMPP.Common.ComposerItem.Dispose
  id: Dispose
  parent: Inetlab.SMPP.Common.ComposerItem
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ComposerItem.Dispose()
  fullName: Inetlab.SMPP.Common.ComposerItem.Dispose()
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 5408
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Inetlab.SMPP.Common.ComposerItem.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Inetlab.SMPP.Common.ComposerItem.Finalize
  commentId: M:Inetlab.SMPP.Common.ComposerItem.Finalize
  id: Finalize
  parent: Inetlab.SMPP.Common.ComposerItem
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ComposerItem.Finalize()
  fullName: Inetlab.SMPP.Common.ComposerItem.Finalize()
  type: Method
  source:
    id: Finalize
    path: ''
    startLine: 5414
  assemblies:
  - cs.temp.dll
  namespace: Inetlab.SMPP.Common
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Inetlab.SMPP.Common.ComposerItem.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Inetlab.SMPP.Common.MessageComposer
  commentId: T:Inetlab.SMPP.Common.MessageComposer
  isExternal: false
  name: MessageComposer
  nameWithType: MessageComposer
  fullName: Inetlab.SMPP.Common.MessageComposer
- uid: Inetlab.SMPP.Common
  commentId: N:Inetlab.SMPP.Common
  isExternal: false
  name: Inetlab.SMPP.Common
  nameWithType: Inetlab.SMPP.Common
  fullName: Inetlab.SMPP.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Inetlab.SMPP.Common.ComposerItem.Parts*
  commentId: Overload:Inetlab.SMPP.Common.ComposerItem.Parts
  isExternal: false
  name: Parts
  nameWithType: ComposerItem.Parts
  fullName: Inetlab.SMPP.Common.ComposerItem.Parts
- uid: Inetlab.SMPP.Common.ISmppMessage[]
  name: ISmppMessage[]
  nameWithType: ISmppMessage[]
  fullName: Inetlab.SMPP.Common.ISmppMessage[]
  nameWithType.vb: ISmppMessage()
  fullName.vb: Inetlab.SMPP.Common.ISmppMessage()
  name.vb: ISmppMessage()
  spec.csharp:
  - uid: Inetlab.SMPP.Common.ISmppMessage
    name: ISmppMessage
    nameWithType: ISmppMessage
    fullName: Inetlab.SMPP.Common.ISmppMessage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Inetlab.SMPP.Common.ISmppMessage
    name: ISmppMessage
    nameWithType: ISmppMessage
    fullName: Inetlab.SMPP.Common.ISmppMessage
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Inetlab.SMPP.Common.ComposerItem.HasAllParts*
  commentId: Overload:Inetlab.SMPP.Common.ComposerItem.HasAllParts
  isExternal: false
  name: HasAllParts
  nameWithType: ComposerItem.HasAllParts
  fullName: Inetlab.SMPP.Common.ComposerItem.HasAllParts
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Inetlab.SMPP.Common.ComposerItem.GetFullMessage*
  commentId: Overload:Inetlab.SMPP.Common.ComposerItem.GetFullMessage
  isExternal: false
  name: GetFullMessage
  nameWithType: ComposerItem.GetFullMessage
  fullName: Inetlab.SMPP.Common.ComposerItem.GetFullMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Inetlab.SMPP.Common.ComposerItem.Dispose*
  commentId: Overload:Inetlab.SMPP.Common.ComposerItem.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ComposerItem.Dispose
  fullName: Inetlab.SMPP.Common.ComposerItem.Dispose
- uid: Inetlab.SMPP.Common.ComposerItem.Finalize*
  commentId: Overload:Inetlab.SMPP.Common.ComposerItem.Finalize
  isExternal: false
  name: Finalize
  nameWithType: ComposerItem.Finalize
  fullName: Inetlab.SMPP.Common.ComposerItem.Finalize
shouldSkipMarkup: true
